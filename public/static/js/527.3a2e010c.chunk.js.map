{"version":3,"file":"static/js/527.3a2e010c.chunk.js","mappings":"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","sources":["components/Header/components/User/index.tsx","components/Header/index.tsx","features/Inbox/index.tsx","../node_modules/antd/es/dropdown/index.js"],"sourcesContent":["import { Avatar, Col, Dropdown, Menu, Row } from 'antd'\nimport { User } from '../../../../types/global'\nimport { PlusOutlined } from '@ant-design/icons'\nimport { randomColorAvatar } from '../../../../functions/global'\n\ntype IProps = {\n    className: string\n    user: User\n\n    menuUser: any\n}\n\nfunction UserDetail(props: IProps) {\n    const name = props.user.name\n\n    return (\n        <Row align=\"middle\">\n            <Col className={`${props.className}--name`}>\n                <span>{props.user.name}</span>\n            </Col>\n            <Dropdown\n                overlay={props.menuUser}\n                placement=\"bottomRight\"\n                arrow\n                className={`${props.className}--avatar`}\n            >\n                <Avatar style={{ backgroundColor: randomColorAvatar(props.user._id) }}>\n                    {name?.slice(name?.indexOf(' ') + 1, name?.indexOf(' ') + 2)}\n                </Avatar>\n            </Dropdown>\n        </Row>\n    )\n}\n\nexport default UserDetail\n","import { Col, Dropdown, Input, Menu, Row } from 'antd'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport userApi from '../../api/userApi'\nimport { setSignOut, setUser } from '../../app/userSlice'\nimport { classComponent } from '../../constants/className'\nimport { User } from '../../types/global'\nimport Search from '../Search'\nimport UserDetail from './components/User'\nimport { DownOutlined } from '@ant-design/icons'\n\nimport './Header.scss'\nimport { NavLink } from 'react-router-dom'\nimport { CONTENT_COMPONENT } from '../../constants/global'\n\ntype TProps = {\n    className: string\n    title?: string\n    dropdown?: any\n    actionDropdown?: Function\n    navigate?: Array<any>\n\n    changeNameProject?: Function\n}\n\nconst content = CONTENT_COMPONENT.header\nconst className = classComponent.header\n\nfunction Header(props: TProps) {\n    const user: User = useSelector((state: any) => state.user)\n    const dispatch = useDispatch()\n    const [title, setTitle] = useState<string>(props.dropdown)\n\n    const menuDropdown = (\n        <Menu\n            onClick={(value) => {\n                if (props.actionDropdown) props.actionDropdown(value.key)\n            }}\n        >\n            {content.menuDropdown.map((value) => {\n                return (\n                    <Menu.Item key={value.key}>\n                        <value.icon /> {value.text}\n                    </Menu.Item>\n                )\n            })}\n        </Menu>\n    )\n\n    const menuUser = (\n        <Menu onClick={(value) => handleUser(value.key)}>\n            {content.menuUser.map((value) => {\n                return (\n                    <Menu.Item key={value.key}>\n                        <value.icon /> {value.text}\n                    </Menu.Item>\n                )\n            })}\n        </Menu>\n    )\n\n    const getUser = async (_id: string) => {\n        try {\n            const response: any = await userApi.getUserDetail(_id)\n            dispatch(setUser(response))\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const handleUser = (value: any) => {\n        switch (value) {\n            case 'profile':\n                break\n            case 'logout':\n                dispatch(setSignOut({ isLogin: false, _id: '' }))\n                break\n            default:\n                break\n        }\n    }\n\n    useEffect(() => {\n        getUser(user._id)\n        setTitle(props.dropdown)\n    }, [user.name !== undefined, props.dropdown])\n\n    return (\n        <Row align=\"middle\" justify=\"space-between\" className={`${className} ${props.className}`}>\n            <Col>\n                <Row>\n                    {props.dropdown ? (\n                        <span className={`${className}__title`}>\n                            <Dropdown overlay={menuDropdown} placement=\"bottomLeft\" arrow>\n                                <button className={`${className}__title--icon`}>\n                                    <DownOutlined />\n                                </button>\n                            </Dropdown>\n\n                            <Input\n                                className={`${className}__title--input`}\n                                bordered={false}\n                                value={title}\n                                onChange={(e) => setTitle(e.target.value)}\n                                onBlur={() => {\n                                    props.changeNameProject &&\n                                        props.changeNameProject(title || props.dropdown)\n                                }}\n                            />\n                        </span>\n                    ) : (\n                        <span className={`${className}__title`}>{props.title}</span>\n                    )}\n                </Row>\n                {props.navigate && props.navigate.length && (\n                    <Row className={`${className}__navigate`}>\n                        {props.navigate.map((value, index) => {\n                            return (\n                                <Col key={`header-navigate-${index} `}>\n                                    <NavLink\n                                        to={value.path}\n                                        className={({ isActive }) =>\n                                            isActive\n                                                ? `${className}__navigate--link active`\n                                                : `${className}__navigate--link`\n                                        }\n                                    >\n                                        {value.text}\n                                    </NavLink>\n                                </Col>\n                            )\n                        })}\n                    </Row>\n                )}\n            </Col>\n            <Col>\n                <Row align=\"middle\">\n                    <Col className={`${className}__search`}>\n                        <Search onSearch={(value: any) => console.log(value)} />\n                    </Col>\n                    <Col>\n                        <UserDetail\n                            menuUser={menuUser}\n                            user={user}\n                            className={`${className}__detail`}\n                        />\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    )\n}\n\nexport default Header\n","import { Col, Row } from 'antd';\nimport { Navigate, Route, Routes } from 'react-router-dom';\n\nimport Header from '../../components/Header';\nimport { containerStyle } from '../../styles/chat.style';\nimport { classLayout } from '../../constants/className';\nimport { CONTENT_INBOX } from '../../constants/global';\nimport { ROUTER_INBOX } from '../../constants/routers';\nimport { Router } from '../../types/global';\n\ntype Inbox = {\n    className: string;\n};\n\nconst content = CONTENT_INBOX;\n\nfunction Inbox(props: Inbox) {\n    return (\n        <Row className={props.className} style={containerStyle}>\n            <Col\n                xs={24}\n                style={{ ...containerStyle, display: 'grid', gridTemplateRows: 'auto 1fr' }}\n            >\n                <Header\n                    className={classLayout.header}\n                    title={content.title}\n                    navigate={content.navigate}\n                />\n\n                <Routes>\n                    <Route path=\"*\" element={<Navigate to=\"/inbox/messages\" />} />\n\n                    {ROUTER_INBOX.map((value: Router, index: number) => {\n                        return (\n                            <Route\n                                key={`router-auth-${index}`}\n                                path={value.path}\n                                element={<value.component />}\n                            />\n                        );\n                    })}\n                </Routes>\n            </Col>\n        </Row>\n    );\n}\n\nexport default Inbox;\n","import Dropdown from './dropdown';\nexport default Dropdown;"],"names":["props","name","user","align","className","overlay","menuUser","placement","arrow","style","backgroundColor","randomColorAvatar","_id","slice","indexOf","content","CONTENT_COMPONENT","classComponent","useSelector","state","dispatch","useDispatch","useState","dropdown","title","setTitle","menuDropdown","onClick","value","actionDropdown","key","map","icon","text","handleUser","getUser","userApi","response","setUser","console","log","setSignOut","isLogin","useEffect","undefined","justify","DownOutlined","bordered","onChange","e","target","onBlur","changeNameProject","navigate","length","index","to","path","isActive","Search","onSearch","User","CONTENT_INBOX","containerStyle","xs","display","gridTemplateRows","classLayout","element","ROUTER_INBOX","component","Dropdown"],"sourceRoot":""}