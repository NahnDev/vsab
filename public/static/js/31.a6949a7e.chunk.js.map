{"version":3,"file":"static/js/31.a6949a7e.chunk.js","mappings":"8TAkCA,MAtBA,SAAoBA,GAChB,IAAMC,EAAOD,EAAME,KAAKD,KAExB,OACI,UAAC,IAAD,CAAKE,MAAM,SAAX,WACI,SAAC,IAAD,CAAKC,UAAS,UAAKJ,EAAMI,UAAX,UAAd,UACI,0BAAOJ,EAAME,KAAKD,UAEtB,SAAC,IAAD,CACII,QAASL,EAAMM,SACfC,UAAU,cACVC,OAAK,EACLJ,UAAS,UAAKJ,EAAMI,UAAX,YAJb,UAMI,SAAC,IAAD,CAAQK,MAAO,CAAEC,iBAAiBC,EAAAA,EAAAA,GAAkBX,EAAME,KAAKU,MAA/D,gBACKX,QADL,IACKA,OADL,EACKA,EAAMY,OAAU,OAAJZ,QAAI,IAAJA,OAAA,EAAAA,EAAMa,QAAQ,MAAO,GAAO,OAAJb,QAAI,IAAJA,OAAA,EAAAA,EAAMa,QAAQ,MAAO,W,oBCFxEC,E,QAAUC,GAAAA,OACVZ,EAAYa,EAAAA,GAAAA,OA+HlB,MA7HA,SAAgBjB,GACZ,IAAME,GAAagB,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAgBA,EAAMjB,QAC/CkB,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAiBtB,EAAMuB,UAAjD,eAAOC,EAAP,KAAcC,EAAd,KAEMC,GACF,SAAC,IAAD,CACIC,QAAS,SAACC,GACF5B,EAAM6B,gBAAgB7B,EAAM6B,eAAeD,EAAME,MAF7D,SAKKf,EAAQW,aAAaK,KAAI,SAACH,GACvB,OACI,UAAC,SAAD,YACI,SAACA,EAAMI,KAAP,IADJ,IACoBJ,EAAMK,OADVL,EAAME,UAQhCxB,GACF,SAAC,IAAD,CAAMqB,QAAS,SAACC,GAAD,OAAWM,EAAWN,EAAME,MAA3C,SACKf,EAAQT,SAASyB,KAAI,SAACH,GACnB,OACI,UAAC,SAAD,YACI,SAACA,EAAMI,KAAP,IADJ,IACoBJ,EAAMK,OADVL,EAAME,UAQhCK,EAAO,mCAAG,WAAOvB,GAAP,gGAEoBwB,EAAAA,EAAAA,cAAsBxB,GAF1C,OAEFyB,EAFE,OAGRjB,GAASkB,EAAAA,EAAAA,IAAQD,IAHT,gDAKRE,QAAQC,IAAR,MALQ,yDAAH,sDASPN,EAAa,SAACN,GAChB,OAAQA,GACJ,IAAK,UAKL,QACI,MAJJ,IAAK,SACDR,GAASqB,EAAAA,EAAAA,IAAW,CAAEC,SAAS,EAAO9B,IAAK,QAYvD,OALA+B,EAAAA,EAAAA,YAAU,WACNR,EAAQjC,EAAKU,KACba,EAASzB,EAAMuB,YAChB,MAAeqB,IAAd1C,EAAKD,KAAoBD,EAAMuB,YAG/B,UAAC,IAAD,CAAKpB,MAAM,SAAS0C,QAAQ,gBAAgBzC,UAAS,UAAKA,EAAL,YAAkBJ,EAAMI,WAA7E,WACI,UAAC,IAAD,YACI,SAAC,IAAD,UACKJ,EAAMuB,UACH,kBAAMnB,UAAS,UAAKA,EAAL,WAAf,WACI,SAAC,IAAD,CAAUC,QAASqB,EAAcnB,UAAU,aAAaC,OAAK,EAA7D,UACI,mBAAQJ,UAAS,UAAKA,EAAL,iBAAjB,UACI,SAAC0C,EAAA,EAAD,SAIR,SAAC,IAAD,CACI1C,UAAS,UAAKA,EAAL,kBACT2C,UAAU,EACVnB,MAAOJ,EACPwB,SAAU,SAACC,GAAD,OAAOxB,EAASwB,EAAEC,OAAOtB,QACnCuB,OAAQ,WACJnD,EAAMoD,mBACFpD,EAAMoD,kBAAkB5B,GAASxB,EAAMuB,iBAKvD,iBAAMnB,UAAS,UAAKA,EAAL,WAAf,SAAyCJ,EAAMwB,UAGtDxB,EAAMqD,UAAYrD,EAAMqD,SAASC,SAC9B,SAAC,IAAD,CAAKlD,UAAS,UAAKA,EAAL,cAAd,SACKJ,EAAMqD,SAAStB,KAAI,SAACH,EAAO2B,GACxB,OACI,SAAC,IAAD,WACI,SAAC,KAAD,CACIC,GAAI5B,EAAM6B,KACVrD,UAAW,gBAAGsD,EAAH,EAAGA,SAAH,MACC,UACCtD,EADTsD,EAAQ,+CAHhB,SAQK9B,EAAMK,QATf,0BAA6BsB,EAA7B,eAiBpB,SAAC,IAAD,WACI,UAAC,IAAD,CAAKpD,MAAM,SAAX,WACI,SAAC,IAAD,CAAKC,UAAS,UAAKA,EAAL,YAAd,UACI,SAACuD,EAAA,EAAD,CAAQC,SAAU,SAAChC,GAAD,OAAgBW,QAAQC,IAAIZ,SAElD,SAAC,IAAD,WACI,SAACiC,EAAD,CACIvD,SAAUA,EACVJ,KAAMA,EACNE,UAAS,UAAKA,EAAL,0B,2QC/GrC,MAlBA,SAAsBJ,GAGlB,OAFA2C,EAAAA,EAAAA,YAAU,cAAU,CAAC3C,EAAM8D,WAGvB,SAAC,IAAD,CACItC,MAAOxB,EAAMwB,QAAS,EACtBjB,UAAU,QACVwD,MAAO,IACPC,QAAS,kBAAMhE,EAAMiE,cACrBH,QAAS9D,EAAM8D,QACfI,cAAc,EACdC,UAAU,EAPd,UASI,SAAC,IAAD,CAAMC,SAAUpE,EAAMqE,QAAtB,SAAgCrE,EAAMsE,mB,oGCd5CvD,EAAUwD,EAAAA,GAAAA,WAuChB,MArCA,SAAoBvE,GAAgB,IAAD,EACvBI,EAAwDJ,EAAxDI,UAAWwB,EAA6C5B,EAA7C4B,MAAO4C,EAAsCxE,EAAtCwE,KAAMC,EAAgCzE,EAAhCyE,aAAcC,EAAkB1E,EAAlB0E,cAE9C,OACI,UAAC,IAAD,CAAKvE,MAAM,SAASC,UAAS,UAAKA,EAAL,SAA7B,WACI,SAAC,IAAD,CAAKuE,GAAI,EAAGvE,UAAS,UAAKA,EAAL,iBAArB,UACI,SAAC,IAAD,CACIwE,MAAM,SACNC,KAAM,GACNpE,MAAO,CACHC,iBAAiBC,EAAAA,EAAAA,GAAkBiB,EAAMhB,KACzCkE,aAAc,IALtB,mBAQKlD,EAAM3B,YARX,aAQK,EAAYY,MAAM,EAAG,QAI9B,UAAC,IAAD,CAAK8D,GAAI,GAAIvE,UAAS,UAAKA,EAAL,eAAtB,WACI,0BAAOwB,EAAM3B,QACb,0BAAO2B,EAAMmD,WAGhBL,IAAkB9C,EAAMhB,MACrB,SAAC,IAAD,CAAK+D,GAAI,EAAT,UACI,mBACIhD,QAAS,kBAAM8C,EAAa7C,EAAMhB,IAAK4D,IACvCpE,UAAS,UAAKA,EAAL,QAFb,SAIc,QAAToE,GAAiB,SAACzD,EAAQiE,UAAT,KAAwB,SAACjE,EAAQkE,UAAT,YC3B5D7E,GADUmE,EAAAA,GAAAA,WACEW,EAAAA,GAAAA,QA4GlB,MA1GA,SAAoBlF,GAChB,IAAMoB,GAAWC,EAAAA,EAAAA,MACX8D,GAAmBjE,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAgBA,EAAMgE,WACrDjF,GAAagB,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAgBA,EAAMjB,QAErD,GAAoCoB,EAAAA,EAAAA,YAApC,eAAO8D,EAAP,KAAmBC,EAAnB,KACMC,EAAQ,mCAAG,WAAOC,GAAP,wGAE2BnD,EAAAA,EAAAA,QAAgBmD,GAF3C,OAIT,GAAwB,KAFlBlD,EAFG,QAIIiB,QACTkC,EAAAA,EAAAA,GAAyB,UAAW,mBAAoB,QACrD,CACCC,EAAM,GADP,UAEgBpD,GAFhB,IAEH,IAFG,iBAEQnC,EAFR,QAGKwF,EAASP,EAAQQ,QAAQD,QAAO,SAACE,GAAD,OAAUA,EAAK1F,KAAKU,MAAQV,EAAKU,OACrE6E,EAAII,MAAJ,kBAAc3F,GAAd,IAAoB4D,QAA2B,IAAlB4B,EAAOpC,WAFxC,uBAA8B,IAF3B,8BAOH+B,EAAcI,GAbT,gDAgBTlD,QAAQC,IAAR,MAhBS,yDAAH,sDAoBRsD,EAAU,mCAAG,WAAOC,EAAaC,GAApB,gGAEoBC,EAAAA,EAAAA,YAAwBF,EAAKC,GAFjD,OAEL3D,EAFK,OAGXjB,GAAS8E,EAAAA,EAAAA,IAAU7D,IACnBjB,GAAS+E,EAAAA,EAAAA,IAAmB,CAAEC,KAAML,EAAKnE,MAAOS,KAChDgD,EAAc,IALH,gDAOX9C,QAAQC,IAAR,MAPW,yDAAH,wDAWV6D,EAAe,mCAAG,WAAON,EAAaO,GAApB,0FAEOL,EAAAA,EAAAA,cAA0BF,EAAKO,GAFtC,cAGhBlF,GAASmF,EAAAA,EAAAA,IAAaD,IACtBlF,GAASoF,EAAAA,EAAAA,IAAsB,CAAEJ,KAAML,EAAKnE,MAAO0E,KAJnC,gDAMhB/D,QAAQC,IAAR,MANgB,yDAAH,wDAcfiC,EAAe,SAAC7C,EAAY4C,GAC9B,GAAa,WAATA,EACA6B,EAAgBlB,EAAQvE,IAAKgB,OAC1B,CACH,IAAMoE,EAAoB,CACtB9F,KAAM0B,GAEVkE,EAAWX,EAAQvE,IAAKoF,KAIhC,OACI,UAAC,IAAD,YACI,UAAC,IAAD,CAAKrB,GAAI,GAAIvE,UAAS,UAAKA,EAAL,WAAtB,WACI,SAACuD,EAAA,EAAD,CAAQC,SAlBC,SAAChC,GAClBA,GAAS0D,EAAS1D,OAkBV,SAAC,IAAD,WACI,SAAC,IAAD,CAAK+C,GAAI,GAAIvE,UAAS,UAAKA,EAAL,SAAtB,SACKgF,GACGA,EAAW9B,OAAS,GACpB8B,EAAWrD,KAAI,SAACH,EAAO2B,GACnB,GAAIrD,EAAKU,MAAQgB,EAAMhB,KAAOgB,EAAMkC,QAChC,OACI,SAAC2C,EAAD,CACI/B,cAAeS,EAAQuB,OAEvBtG,UAAS,UAAKA,GACdwB,MAAOA,EACP4C,KAAM,MACNC,aAAcA,GANlB,yBAE2BlB,eAYvD,SAAC,IAAD,CAAKoB,GAAI,GAAIvE,UAAS,UAAKA,EAAL,SAAtB,SACK+E,EAAQQ,QAAQ5D,KAAI,SAACH,EAAO2B,GACzB,GAAIrD,EAAKU,MAAQgB,EAAM1B,KAAKU,IACxB,OACI,SAAC6F,EAAD,CACI/B,cAAeS,EAAQuB,OAEvBtG,UAAS,UAAKA,GACdwB,MAAOA,EAAM1B,KACbsE,KAAM,SACNC,aAAcA,GANlB,yBAE2BlB,a,SCjFvD,MApBA,SAAmBvD,GACf,OACI,UAAC,IAAD,CAAK6C,QAAQ,SAAS1C,MAAM,SAASC,UAAS,UAAKJ,EAAMI,WAAzD,UACKJ,EAAM2G,QACH,kBAAOC,QAAS5G,EAAMC,KAAMG,UAAS,UAAKJ,EAAMI,UAAX,WAArC,SACKJ,EAAM2G,SAGf,SAAC,IAAD,CACI1G,KAAMD,EAAMC,KACZG,UAAS,UAAKJ,EAAMI,UAAX,WACTyG,YAAa7G,EAAM6G,YACnB9D,UAAU,EACVnB,MAAO5B,EAAM4B,MAAM3B,KACnB+C,SAAU,SAACC,GAAD,OAAOjD,EAAMgD,SAASC,EAAEC,OAAOtB,c,UC6CzD,MA5DA,SAAe5B,GACX,OACI,iCACI,SAAC,IAAD,CAAKI,UAAS,UAAKJ,EAAMI,UAAX,WAAd,UACI,uCAEJ,SAAC,IAAD,CAAKA,UAAS,UAAKJ,EAAMI,WAAzB,UACI,SAAC,IAAD,CAAKuE,GAAI,GAAT,SACK3E,EAAM8G,MAAM/E,KAAI,SAACH,EAAO2B,GACrB,IAAK3B,EAAMmF,QACP,OACI,UAAC,IAAD,CAEIlE,QAAQ,gBACR1C,MAAM,SACNC,UAAS,UAAKJ,EAAMI,UAAX,UAJb,WAMI,iBAAKA,UAAS,UAAKJ,EAAMI,UAAX,UAAd,WACI,0BAAOwB,EAAM3B,QACb,yBACiC,IAA5B2B,EAAMoF,WAAW1D,QACd,SAAC,IAAD,CAAqB2D,MAAM,OAA3B,2BAIArF,EAAMoF,WAAWjF,KAAI,SAACH,EAAO2B,GACzB,OACI,SAAC,IAAD,CAEI0D,MAAM,OACNxG,MAAO,CACHyG,YAAa,EACbC,aAAc,EACdC,SAAU,UANlB,SASKxF,GATL,cACgB2B,aAelC3B,EAAMmF,UACJ,mBACI3G,UAAS,UAAKJ,EAAMI,UAAX,SACTuB,QAAS,kBAAM3B,EAAMqH,aAAazF,IAFtC,UAII,SAAC5B,EAAMgC,KAAP,QArCZ,eACiBuB,e,UCVzC+D,EAAWC,EAAAA,EAAAA,OAyCnB,MAvCA,SAA0BvH,GAgBtB,OACI,UAAC,IAAD,CAAKG,MAAM,SAASC,UAAS,UAAKJ,EAAMI,WAAxC,UACKJ,EAAM2G,QAAS,kBAAOvG,UAAS,UAAKJ,EAAMI,UAAX,WAAhB,SAAgDJ,EAAM2G,SACtE,SAAC,IAAD,CACIa,KAAM,OACNzE,UAAU,EACV3C,UAAS,UAAKJ,EAAMI,UAAX,WACTwB,MAAO5B,EAAM4B,MAAMoF,WACnBhE,SAAU,SAACyE,GAAD,OAASzH,EAAMgD,SAASyE,IAClCC,UAxBZ,SAAmB1H,GACf,IAAQ2G,EAAoC3G,EAApC2G,MAAO/E,EAA6B5B,EAA7B4B,MAAOuC,EAAsBnE,EAAtBmE,SAAUH,EAAYhE,EAAZgE,QAEhC,OACI,SAAC,IAAD,CACIiD,OAAOtG,EAAAA,EAAAA,GAAkBiB,GACzBuC,SAAUA,EACVH,QAASA,EACTvD,MAAO,CAAEyG,YAAa,GAJ1B,SAMKP,KAQL,SAQK3G,EAAM2H,QAAQ5F,KAAI,SAACH,GAChB,OACI,SAAC0F,EAAD,CAAwB1F,MAAOA,EAAMhB,IAArC,SACKgB,EAAM3B,MADE2B,EAAMhB,cC9BrCG,EAAUwD,EAAAA,GAAAA,UACVnE,EAAY8E,EAAAA,GAAAA,MAuFlB,MArFA,SAAmBlF,GACf,IAAM4H,GAAcC,EAAAA,EAAAA,MAEpB,GAAsCvG,EAAAA,EAAAA,UAAc,CAAErB,KAAM,GAAI+G,WAAY,KAA5E,eAAOc,EAAP,KAAoBC,EAApB,KACA,GAA0BzG,EAAAA,EAAAA,UAAsB,IAAhD,eAAOwF,EAAP,KAAckB,EAAd,KAEMC,EAAQ,mCAAG,WAAOC,GAAP,gGAEcjC,EAAAA,EAAAA,SAAqBiC,GAFnC,OAEH7F,EAFG,OAGT2F,EAAS3F,GAHA,gDAKTE,QAAQC,IAAR,MALS,yDAAH,sDASR2F,EAAS,mCAAG,WAAOD,EAAYlC,GAAnB,gGAEaC,EAAAA,EAAAA,UAAsBiC,EAAIlC,GAFvC,OAEJ3D,EAFI,OAGVE,QAAQC,IAAIH,GAERA,IACA4F,EAASC,GACTH,EAAe,CAAE9H,KAAM,GAAI+G,WAAY,MACvCxB,EAAAA,EAAAA,GAAyB,UAAW,yBAA0B,KARxD,gDAWVjD,QAAQC,IAAR,MAXU,yDAAH,wDAeT4F,EAAW,mCAAG,WAAOrC,EAAamC,GAApB,0FAEWjC,EAAAA,EAAAA,YAAwBF,EAAKmC,GAFxC,cAGZD,EAASlC,GAHG,gDAKZxD,QAAQC,IAAR,MALY,yDAAH,wDAkBjB,OAJAG,EAAAA,EAAAA,YAAU,WACNsF,EAASL,EAAOM,MACjB,CAACN,KAGA,UAAC,IAAD,YACI,UAAC,IAAD,CAAKjD,GAAI,GAAT,WACI,SAAC,EAAD,CACIvE,UAAS,UAAKA,EAAL,UACTH,KAAM,OACN0G,MAAO,cACP/E,MAAOkG,EACP9E,SAAU,SAACpB,GAAD,OAAmBmG,GAAe,kBAAKD,GAAN,IAAmB7H,KAAM2B,SAExE,SAAC,EAAD,CACI+F,QAAS5G,EAAQsH,kBACjBjI,UAAS,UAAKA,EAAL,UACTuG,MAAO,aACP/E,MAAOkG,EACP9E,SAAU,SAACpB,GAAD,OAAgBmG,GAAe,kBAAKD,GAAN,IAAmBd,WAAYpF,SAG3E,SAAC,IAAD,CAAKzB,MAAO,SAAU0C,QAAS,SAAUlB,QA3BhC,kBAAMwG,EAAUP,EAAOM,GAAIJ,IA2BpC,UACI,mBAAQtD,KAAM,SAAUpE,UAAS,UAAKA,EAAL,QAAjC,SACKW,EAAQiE,kBAKrB,SAAC,IAAD,CAAKL,GAAI,GAAT,UACI,SAAC,EAAD,CACIvE,UAAS,UAAKA,EAAL,SACT0G,MAAOA,EACP9E,KAAMjB,EAAQuH,eACdjB,aAtCK,SAACzF,GAClBwG,EAAYxG,EAAMuD,SAAW,GAAIvD,EAAMhB,KAAO,aCtBtD,MA1BA,SAAoBZ,GAAgB,IAAD,EACvBI,EAAqBJ,EAArBI,UAAWwB,EAAU5B,EAAV4B,MAEnB,OACI,UAAC,IAAD,CAAKzB,MAAM,SAASC,UAAS,UAAKA,EAAL,SAA7B,WACI,SAAC,IAAD,CAAKuE,GAAI,EAAGvE,UAAS,UAAKA,EAAL,iBAArB,UACI,SAAC,IAAD,CACIwE,MAAM,SACNC,KAAM,GACNpE,MAAO,CACHC,iBAAiBC,EAAAA,EAAAA,GAAkBiB,EAAMhB,KACzCkE,aAAc,IALtB,mBAQKlD,EAAM3B,YARX,aAQK,EAAYY,MAAM,EAAG,QAI9B,UAAC,IAAD,CAAK8D,GAAI,GAAIvE,UAAS,UAAKA,EAAL,eAAtB,WACI,0BAAOwB,EAAM3B,QACb,0BAAO2B,EAAMmD,eClBrBuC,EAAWC,EAAAA,EAAAA,OA0BnB,MAxBA,SAA0BvH,GACtB,OACI,UAAC,IAAD,CAAKG,MAAM,SAASC,UAAS,UAAKJ,EAAMI,WAAxC,UACKJ,EAAM2G,QAAS,kBAAOvG,UAAS,UAAKJ,EAAMI,UAAX,WAAhB,SAAgDJ,EAAM2G,SAEtE,SAAC,IAAD,CACI4B,aAAcvI,EAAM4B,MAAQ5B,EAAM4B,MAAMhB,IAAM,GAC9CmC,UAAU,EACV3C,UAAS,UAAKJ,EAAMI,UAAX,WACT4C,SAAU,SAACyE,GAAD,OAASzH,EAAMgD,SAASyE,IAJtC,SAMKzH,EAAM2H,QAAQ5F,KAAI,SAACH,GAChB,IAAKA,EAAMmF,QACP,OACI,SAAC,EAAD,CAAwBnF,MAAOA,EAAMhB,IAArC,SACKgB,EAAM3B,MADE2B,EAAMhB,cCfzCR,EAAY8E,EAAAA,GAAAA,SAoElB,MAlEA,SAAqBlF,GACjB,IAAM4H,GAAcC,EAAAA,EAAAA,MACd1C,GAAmBjE,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAgBA,EAAMgE,WAE3D,GAA0B7D,EAAAA,EAAAA,UAAsB,IAAhD,eAAOwF,EAAP,KAAckB,EAAd,KAEMC,EAAQ,mCAAG,WAAOC,GAAP,gGAEcjC,EAAAA,EAAAA,SAAqBiC,GAFnC,OAEH7F,EAFG,OAGT2F,EAAS3F,GAHA,gDAKTE,QAAQC,IAAR,MALS,yDAAH,sDASRgG,EAAS,mCAAG,WAAOzC,EAAaO,EAAaN,GAAjC,gGAEaC,EAAAA,EAAAA,aAAyBF,EAAKO,EAAKN,GAFhD,OAEJ3D,EAFI,OAGVE,QAAQC,IAAIH,GACZ4F,EAASlC,GAJC,gDAMVxD,QAAQC,IAAR,MANU,yDAAH,0DAkBf,OAJAG,EAAAA,EAAAA,YAAU,WACNsF,EAASL,EAAOM,MACjB,CAACN,KAGA,SAAC,IAAD,WACI,SAAC,IAAD,CAAKjD,GAAI,GAAIvE,UAAS,UAAKA,GAA3B,SACK+E,GACGA,EAAQQ,QAAQ5D,KAAI,SAACH,EAAO2B,GACxB,GAAI4B,EAAQuB,SAAW9E,EAAM1B,KAAKU,IAC9B,OACI,UAAC,IAAD,CAEIT,MAAM,SACNC,UAAS,UAAKA,EAAL,SAHb,WAKI,SAAC,EAAD,CACIwB,MAAOA,EAAM1B,KACbE,UAAS,UAAKA,EAAL,eAEb,SAAC,EAAD,CACIuH,QAASb,EACT1G,UAAS,UAAKA,EAAL,WACTuG,MAAO,OACP/E,MAAOA,EAAM6G,KACbzF,SAAU,SAAC0F,GAAD,OA7BrB,SAAC9G,EAAY0E,GAClCkC,EAAUrD,EAAQvE,IAAK0F,EAAK,CAAEmC,KAAM7G,IA6BA+G,CAAiBD,EAAa9G,EAAM1B,KAAKU,UAfrD,sBACwB2C,Y,gCCFxD,OArCA,SAAmBvD,GACf,IAAQ4I,EAAkC5I,EAAlC4I,MAAOC,EAA2B7I,EAA3B6I,KAAMlC,EAAqB3G,EAArB2G,MAAOvG,EAAcJ,EAAdI,UAEpBH,EAAgB2I,EAAhB3I,KAAM2B,EAAUgH,EAAVhH,MACNkH,EAAkBD,EAAlBC,cAEFC,EAAcC,GAAAA,CAAOpH,GAErBqH,EAAUJ,EAAKI,QAAQL,EAAM3I,MAC7BiJ,EAAWL,EAAKM,OAAOP,EAAM3I,MAC7BmJ,EAAiBF,EACjBG,EAAeH,GAAYD,EAEjC,OACI,UAAC,UAAD,CACIK,QAAMF,IAAkBC,IAAeH,EACvCK,eAAgBH,GAAkBC,EAAe,QAAU,GAF/D,UAIK1C,IACG,kBAAOC,QAAS3G,EAAMG,UAAS,UAAKA,EAAL,UAA/B,SACKuG,KAGT,SAAC,KAAD,CACI6C,YAAY,EACZtB,GAAIjI,EACJG,UAAS,UAAKA,EAAL,gBACTmI,aAAcQ,GAAeC,GAAAA,GAC7BpH,MAAOA,GAASoH,GAAAA,GAChBS,OAAM,aACNzG,SAAU,SAACyE,GAAD,OAASqB,EAAc7I,EAAMwH,IACvC1E,UAAU,Q,WChClBuE,GAAWC,EAAAA,EAAAA,OAuEnB,OArEA,SAAqBvH,GACjB,IAAQ4I,EAAqD5I,EAArD4I,MAAOC,EAA8C7I,EAA9C6I,KAAMlB,EAAwC3H,EAAxC2H,QAAShB,EAA+B3G,EAA/B2G,MAAiBvG,GAAcJ,EAAxB0J,SAAwB1J,EAAdI,WAEvCH,EAAS2I,EAAT3I,KAEFgJ,EAAUJ,EAAKI,QAAQL,EAAM3I,MAC7BiJ,EAAWL,EAAKM,OAAOP,EAAM3I,MAE7BmJ,EAAiBF,EACjBG,EAAeH,GAAYD,EA4BjC,OACI,UAAC,UAAD,CACIK,QAAMF,IAAkBC,IAAeH,EACvCK,eAAgBH,GAAkBC,EAAe,QAAU,GAF/D,UAIK1C,IACG,kBAAOC,QAAS3G,EAAMG,UAAS,UAAKA,EAAL,UAA/B,SACKuG,KAGT,SAAC,KAAD,gBACIa,KAAM,OACNU,GAAIjI,GACA2I,GAHR,IAII7F,UAAU,EACV3C,UAAS,UAAKA,EAAL,gBACTmI,aAAc,GACdvF,SA3CuB,SAAC2G,GAChC,IAAMC,EAAc,CAChB1G,OAAQ,CACJjD,KAAMA,EACN2B,MAAO+H,IAIff,EAAM5F,SAAS4G,IAoCPlC,UAjCZ,SAAmB1H,GACf,IAAQ2G,EAAoC3G,EAApC2G,MAAO/E,EAA6B5B,EAA7B4B,MAAOuC,EAAsBnE,EAAtBmE,SAAUH,EAAYhE,EAAZgE,QAEhC,OACI,SAAC,IAAD,CACIiD,OAAOtG,EAAAA,EAAAA,GAAkBiB,GACzBuC,SAAUA,EACVH,QAASA,EACTvD,MAAO,CAAEyG,YAAa,GAJ1B,SAMKP,KAeL,SAUKgB,EAAQ5F,KAAI,SAACH,GACV,OACI,SAAC,GAAD,CAAwBA,MAAOA,EAAMhB,IAArC,SACKgB,EAAM1B,KAAKD,MADH2B,EAAMhB,eChErCG,GAAUwD,EAAAA,GAAAA,SA2ChB,OAzCA,SAAkBvE,GACd,IAAMmF,GAAmBjE,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAgBA,EAAMgE,WAE3D,OACI,UAAC,KAAD,CAAM0E,SAAU7J,EAAM8J,aAAtB,WACI,SAAC,KAAD,CACIC,UAAWC,GAAAA,EACX/J,KAAMc,GAAQkJ,WAAWhK,KACzBuE,KAAMzD,GAAQkJ,WAAWzF,KACzBpE,UAAS,UAAK8E,EAAAA,GAAAA,KAAL,WACTyB,MAAO5F,GAAQkJ,WAAWtD,SAE9B,UAAC,IAAD,YACI,SAAC,IAAD,CAAKhC,GAAI,GAAT,UACI,SAAC,KAAD,CACIoF,UAAWG,GACXjK,KAAMc,GAAQoJ,cAAclK,KAC5BG,UAAS,UAAK8E,EAAAA,GAAAA,KAAL,WACTyB,MAAO5F,GAAQoJ,cAAcxD,WAGrC,SAAC,IAAD,CAAKhC,GAAI,GAAT,UACI,SAAC,KAAD,CACIoF,UAAWK,GACXnK,KAAMc,GAAQsJ,WAAWpK,KACzBG,UAAS,UAAK8E,EAAAA,GAAAA,KAAL,WACTyB,MAAO5F,GAAQsJ,WAAW1D,MAC1BgB,QAASxC,EAAQQ,gBAK7B,SAAC,IAAD,CACI5E,QAASA,GAAQiE,UACjBR,KAAK,SACLpE,UAAS,UAAK8E,EAAAA,GAAAA,KAAL,eCVzB,OAvBA,SAAkBlF,GACd,OAAoCsB,EAAAA,EAAAA,UAAc0H,GAAAA,CAAOhJ,EAAMsK,KAAKC,UAApE,eAAOC,EAAP,KAAmBC,EAAnB,KAMA,OAJA9H,EAAAA,EAAAA,YAAU,WACN8H,EAAczK,EAAMsK,KAAKC,WAC1B,CAACvK,EAAMsK,QAGN,UAAC,IAAD,CAAKnK,MAAM,SAASC,UAAS,UAAKJ,EAAMI,WAAxC,UACKJ,EAAM2G,QAAS,kBAAOvG,UAAS,UAAKJ,EAAMI,UAAX,WAAhB,SAAgDJ,EAAM2G,SACtE,SAAC,KAAD,CACI6C,YAAY,EACZpJ,UAAS,UAAKJ,EAAMI,UAAX,WACTmI,aAAcS,GAAAA,CAAOhJ,EAAMsK,KAAKC,SAChC3I,MAAOoH,GAAAA,CAAOwB,GACdf,OAAM,aACNzG,SAAU,SAACyE,GAAD,OAASgD,EAAchD,IACjCtE,OAAQ,kBAAMnD,EAAM0K,cAAcF,EAAY,kBCrBxDzJ,GAAUwD,EAAAA,GAAAA,MAiChB,OA/BA,SAAoBvE,GAChB,OAAoCsB,EAAAA,EAAAA,UAAiBtB,EAAMsK,KAAKrK,MAAhE,eAAOuK,EAAP,KAAmBC,EAAnB,KAMA,OAJA9H,EAAAA,EAAAA,YAAU,WACN8H,EAAczK,EAAMsK,KAAKrK,QAC1B,CAACD,EAAMsK,QAGN,UAAC,IAAD,CAAKzH,QAAQ,SAAS1C,MAAM,SAASC,UAAS,UAAKJ,EAAMI,WAAzD,WACI,iBAAMA,UAAS,UAAKJ,EAAMI,UAAX,UAAf,UACI,SAACJ,EAAMgC,KAAP,OAEJ,SAAC,IAAD,CACI/B,KAAMD,EAAMsK,KAAKrK,KACjBG,UAAS,UAAKJ,EAAMI,UAAX,WACTmI,aAAcvI,EAAMsK,KAAKrK,KACzB2B,MAAO4I,EACPxH,SAAU,SAACC,GAAD,OAAOwH,EAAcxH,EAAEC,OAAOtB,QACxCuB,OAAQ,kBAAMnD,EAAM2K,WAAWH,EAAY,SAC3CzH,UAAU,KAEd,iBACI3C,UAAS,UAAKJ,EAAMI,UAAX,iBACTuB,QAAS,kBAAM3B,EAAM4K,WAAW5K,EAAMsK,KAAK1J,IAAK,gBAFpD,UAII,SAAC,GAAQiK,eAAT,UCxBRvD,GAAWC,EAAAA,EAAAA,OAkEnB,OAhEA,SAAoBvH,GAChB,IAAM4H,GAAcC,EAAAA,EAAAA,MAEpB,GAA8BvG,EAAAA,EAAAA,UAAc,IAA5C,eAAOqG,EAAP,KAAgBmD,EAAhB,KACA,GAA0CxJ,EAAAA,EAAAA,UAActB,EAAMsK,KAAKS,UAAnE,eAAOC,EAAP,KAAsBC,EAAtB,KAEMC,EAAU,mCAAG,WAAOhD,GAAP,gGAEYjC,EAAAA,EAAAA,WAAuBiC,GAFnC,OAEL7F,EAFK,OAGXyI,EAAWzI,GAHA,gDAKXE,QAAQC,IAAR,MALW,yDAAH,sDAgChB,OAvBAG,EAAAA,EAAAA,YAAU,WACNuI,EAAWtD,EAAOM,IAClB+C,EAAiBjL,EAAMsK,KAAKS,YAC7B,CAAC/K,EAAMsK,QAqBN,UAAC,IAAD,CAAKnK,MAAM,SAASC,UAAS,UAAKJ,EAAMI,WAAxC,UACKJ,EAAM2G,QAAS,kBAAOvG,UAAS,UAAKJ,EAAMI,UAAX,WAAhB,SAAgDJ,EAAM2G,SACtE,SAAC,IAAD,CACIa,KAAM,OACNzE,UAAU,EACV3C,UAAS,UAAKJ,EAAMI,UAAX,WACTwB,MAAOoJ,EACPhI,SAAU,SAACpB,GACPqJ,EAAiBrJ,GACjB5B,EAAMmL,eAAevJ,EAAMA,EAAM0B,OAAS,GAAI,WAAY,QAE9DoE,UA9BZ,SAAmB0D,GACf,IAAQzE,EAAoCyE,EAApCzE,MAAO/E,EAA6BwJ,EAA7BxJ,MAAOuC,EAAsBiH,EAAtBjH,SAAUH,EAAYoH,EAAZpH,QAEhC,OACI,SAAC,IAAD,CACIiD,OAAOtG,EAAAA,EAAAA,GAAkBiB,GACzBuC,SAAUA,EACVH,QAAS,WACLA,IACAhE,EAAMmL,eAAevJ,EAAO,WAAY,WAE5CnB,MAAO,CAAEyG,YAAa,GAP1B,SASKP,KAQL,SAWKgB,EAAQ5F,KAAI,SAACH,GACV,OACI,SAAC,GAAD,CAAwBA,MAAOA,EAAMhB,IAArC,SACKgB,EAAM1B,KAAKD,MADH2B,EAAMhB,cC1DnC0G,GAAWC,EAAAA,EAAAA,OACbI,GAAepD,EAAAA,GAAAA,MAAAA,OAiCrB,OA/BA,SAAoBvE,GAChB,OAA0CsB,EAAAA,EAAAA,UAActB,EAAMsK,KAAKe,QAAnE,eAAOL,EAAP,KAAsBC,EAAtB,KAMA,OAJAtI,EAAAA,EAAAA,YAAU,WACNsI,EAAiBjL,EAAMsK,KAAKe,UAC7B,CAACrL,EAAMsK,QAGN,UAAC,IAAD,CAAKnK,MAAM,SAASC,UAAS,UAAKJ,EAAMI,WAAxC,UACKJ,EAAM2G,QAAS,kBAAOvG,UAAS,UAAKJ,EAAMI,UAAX,WAAhB,SAAgDJ,EAAM2G,SACtE,SAAC,IAAD,CACI5D,UAAU,EACV3C,UAAS,UAAKJ,EAAMI,UAAX,WACTwB,MAAOoJ,EACPhI,SAAU,SAACpB,GACPqJ,EAAiBrJ,GACjB5B,EAAMsL,aAAa1J,EAAO,WANlC,SASK+F,GAAQ5F,KAAI,SAACH,GACV,OACI,SAAC,GAAD,CAA0BA,MAAOA,EAAMA,MAAvC,SACKA,EAAMJ,OADEI,EAAMA,gBC9BrCb,GAAUwD,EAAAA,GAAAA,YAsBhB,OApBA,SAAqBvE,GACjB,OACI,UAAC,KAAD,CAAM6J,SAAU7J,EAAM8J,aAAtB,WACI,SAAC,KAAD,CACIC,UAAWC,GAAAA,EACX/J,KAAMc,GAAQkJ,WAAWhK,KACzBuE,KAAMzD,GAAQkJ,WAAWzF,KACzBpE,UAAS,UAAK8E,EAAAA,GAAAA,KAAL,WACTyB,MAAO5F,GAAQkJ,WAAWtD,SAG9B,SAAC,IAAD,CACI5F,QAASA,GAAQiE,UACjBR,KAAK,SACLpE,UAAS,UAAK8E,EAAAA,GAAAA,KAAL,eCLnBnE,GAAUwD,EAAAA,GAAAA,MAAAA,QA6EhB,OA3EA,SAAiBvE,GAAsB,IAAD,EAClC,GAAwCsB,EAAAA,EAAAA,WAAc,yBAAtD,eAAOiK,EAAP,KAAqBC,EAArB,KACA,GAA8BlK,EAAAA,EAAAA,WAAkB,GAAhD,eAAOwC,EAAP,KAAgB2H,EAAhB,KAiBA,OAfA9I,EAAAA,EAAAA,YAAU,WACN,IAAM+I,GACF,SAAC,KAAD,CACIC,cAAeC,EAAAA,GACfC,iBAAkBC,EAAAA,GAClBjC,SAAU,SAACkC,GACPN,GAAW,GACXzL,EAAM8J,aAAaiC,IAEvBC,OAAQC,KAGhBT,EAAgB,CAAEhK,MAAOT,GAAQS,MAAOkK,KAAMA,MAC/C,CAAC1L,EAAMsK,KAAMxG,KAGZ,UAAC,IAAD,CAAK3D,MAAM,SAASC,UAAS,UAAKJ,EAAMI,WAAxC,WACI,UAAC,IAAD,CAAKuE,GAAI,GAAT,WACI,SAAC,IAAD,WACI,mBAAQvE,UAAS,UAAKJ,EAAMI,UAAX,SAA6BuB,QAAS,kBAAM8J,GAAW,IAAxE,SACK1K,GAAQmL,YAGjB,iBAAM9L,UAAS,UAAKJ,EAAMI,UAAX,WAAf,SAA+CW,GAAQS,SACvD,SAAC,IAAD,WACI,SAAC,IAAD,CAAKmD,GAAI,GAAIvE,UAAS,UAAKJ,EAAMI,UAAX,UAAtB,mBACKJ,EAAMsK,KAAK6B,qBADhB,aACK,EAA0BpK,KAAI,SAACH,EAAY2B,GACxC,OACI,UAAC,IAAD,CAEIpD,MAAM,SACN0C,QAAQ,gBACRzC,UAAS,UAAKJ,EAAMI,UAAX,UAJb,WAMI,4BACI,SAACJ,EAAMgC,KAAP,IADJ,KACmB,0BAAOJ,EAAM3B,WAE9B2B,EAAMwK,WACJ,iBAAKhM,UAAS,UAAKJ,EAAMI,UAAX,UAAd,WACI,SAAC,GAAQiM,UAAT,CACI1K,QAAS,kBACL3B,EAAMsM,oBAAoB1K,EAAO,gBAGzC,SAAC,GAAQ2K,WAAT,CACI5K,QAAS,kBACL3B,EAAMsM,oBAAoB1K,EAAO,kBAlBrD,kBACoB2B,eA6BxC,SAACiJ,EAAA,EAAD,CACInI,SAAS,EACTkH,aAAcA,EAAaG,KAC3B5H,QAASA,EACTG,WAAY,SAACrC,GACT6J,EAAW7J,IAEfJ,MAAO+J,EAAa/J,YC5E5BiL,GAAaC,EAAAA,EAAAA,SA8BrB,OA5BA,SAAsB1M,GAClB,OAAoCsB,EAAAA,EAAAA,UAAiBtB,EAAMsK,KAAKrK,MAAhE,eAAOuK,EAAP,KAAmBC,EAAnB,KAMA,OAJA9H,EAAAA,EAAAA,YAAU,WACN8H,EAAczK,EAAMsK,KAAKqC,aAAe,MACzC,CAAC3M,EAAMsK,QAGN,UAAC,IAAD,CAAKzH,QAAQ,SAASzC,UAAS,UAAKJ,EAAMI,WAA1C,UACKJ,EAAM2G,QACH,kBAAOC,QAAS5G,EAAMC,KAAMG,UAAS,UAAKJ,EAAMI,UAAX,WAArC,SACKJ,EAAM2G,SAGf,SAAC8F,GAAD,CACIG,KAAM,EACN3M,KAAMD,EAAMsK,KAAKrK,KACjBG,UAAS,UAAKJ,EAAMI,UAAX,UACTmI,aAAcvI,EAAMsK,KAAKqC,YACzB/K,MAAO4I,EACPxH,SAAU,SAACC,GAAD,OAAOwH,EAAcxH,EAAEC,OAAOtB,QACxCuB,OAAQ,kBAAMnD,EAAM6M,kBAAkBrC,EAAY,gBAClDzH,UAAU,QCZpB3C,GAAY8E,EAAAA,GAAAA,KAoMlB,OAlMA,SAAoBlF,GAChB,IAAM4H,GAAcC,EAAAA,EAAAA,MACpB,GAAwBvG,EAAAA,EAAAA,UAAetB,EAAMsK,MAA7C,eAAOA,EAAP,KAAawC,EAAb,KAEMC,EAAO,mCAAG,WAAOhH,EAAamC,GAApB,gGAEqBjC,EAAAA,EAAAA,eAA2BF,EAAKmC,GAFrD,OAEF7F,EAFE,OAGRyK,EAAQzK,GAHA,gDAKRE,QAAQC,IAAR,MALQ,yDAAH,wDASPwK,EAAS,mCAAG,WAAOjH,EAAamC,EAAYlC,GAAhC,0FAEmBC,EAAAA,EAAAA,WAAuBF,EAAKmC,EAAIlC,GAFnD,gBAINhG,EAAMiN,aACNF,EAAQhH,EAAKmC,IALP,gDAQV3F,QAAQC,IAAR,MARU,yDAAH,0DAYT0K,EAAU,mCAAG,WAAOnH,EAAamC,GAApB,uFAEXlI,EAAMmN,YAAW,GAFN,SAIYlH,EAAAA,EAAAA,YAAwBF,EAAKmC,GAJzC,OAIL7F,EAJK,OAKXrC,EAAMiN,aACF5K,IACArC,EAAMoN,kBAAiB,GACvBpN,EAAMmN,YAAW,IARV,gDAWX5K,QAAQC,IAAR,MAXW,yDAAH,wDAeV6K,EAAY,mCAAG,WAAOtH,EAAamC,EAAYmD,GAAhC,6EAEE,aAAXA,EAFS,gCAGoBpF,EAAAA,EAAAA,mBAA+BF,EAAKmC,GAHxD,eAIT1C,EAAAA,EAAAA,GAAyB,UAAW,iBAAkB,IAJ7C,wCAMcS,EAAAA,EAAAA,YAAwBF,EAAKmC,GAN3C,gBAOT1C,EAAAA,EAAAA,GAAyB,UAAW,4BAA6B,IAPxD,QASbxF,EAAMiN,aACNF,EAAQhH,EAAKuE,EAAK1J,KAAO,IAVZ,kDAYb2B,QAAQC,IAAR,MAZa,0DAAH,0DAgBZ8K,EAAW,mCAAG,WAAOvH,EAAamC,EAAYlC,GAAhC,0FAEiBC,EAAAA,EAAAA,aAAyBF,EAAKmC,EAAIlC,GAFnD,gBAKRhG,EAAMiN,aACNF,EAAQhH,EAAKmC,IACb1C,EAAAA,EAAAA,GAAyB,UAAW,+BAAgC,KAP5D,gDAUZjD,QAAQC,IAAR,MAVY,yDAAH,0DAcX+K,EAAY,mCAAG,WAAOxH,EAAamC,EAAYlC,GAAhC,0FAEgBC,EAAAA,EAAAA,kBAA8BF,EAAKmC,EAAIlC,GAFvD,gBAIThG,EAAMiN,aACNF,EAAQhH,EAAKmC,IALJ,gDAQb3F,QAAQC,IAAR,MARa,yDAAH,0DAYZgL,EAAc,mCAAG,WAAOzH,EAAamC,EAAY5B,GAAhC,gGAEcL,EAAAA,EAAAA,oBAAgCF,EAAKmC,EAAI5B,GAFvD,OAETjE,EAFS,OAGfyK,EAAQzK,GAHO,gDAKfE,QAAQC,IAAR,MALe,yDAAH,0DAQdiL,EAAS,SAAC7L,EAAYgH,EAAYyC,GACpC,IAAMnD,EAAKlI,EAAMsK,KAAK1J,KAAO,GAE7B,GAAIgB,EAAO,CACP,IAAIoE,EAAY,GAChB,OAAQ4C,GACJ,IAAK,OACD5C,EAAK/F,KAAO2B,EACZoL,EAAUpF,EAAOM,GAAIA,EAAIlC,GAEzB,MACJ,IAAK,SACDA,EAAKqF,OAASzJ,EACdoL,EAAUpF,EAAOM,GAAIA,EAAIlC,GAEzB,MACJ,IAAK,cACDA,EAAK2G,YAAc/K,EACnBoL,EAAUpF,EAAOM,GAAIA,EAAIlC,GAEzB,MACJ,IAAK,WACc,WAAXqF,EACAmC,EAAe5F,EAAOM,GAAIA,EAAItG,GAE9B2L,EAAa3F,EAAOM,GAAIA,EAAI,CAAEwF,OAAQ9L,IAG1C,MACJ,IAAK,UACDoE,EAAKuE,QAAUoD,OAAO3E,GAAAA,CAAOpH,GAAOgM,MAAMnE,OAAO,MACjDuD,EAAUpF,EAAOM,GAAIA,EAAIlC,GACzB,MACJ,IAAK,cACDkH,EAAWtF,EAAOM,GAAItG,MAqBtC,OAJAe,EAAAA,EAAAA,YAAU,WACNmK,EAAQ9M,EAAMsK,QACf,CAACtK,EAAMsK,QAGN,SAAC,IAAD,WACI,UAAC,IAAD,CAAK3F,GAAI,GAAT,WACI,SAAC,GAAD,CACIvE,UAAS,UAAKA,GAAL,WACT4B,KAAMhC,EAAMgC,KACZsI,KAAMA,EACNK,WAAY8C,EACZ7C,WAAY6C,KAEhB,SAAC,GAAD,CACIrN,UAAS,UAAKA,GAAL,UACTkK,KAAMA,EACN3D,MAAO,WACPwE,eAAgBsC,KAEpB,SAAC,GAAD,CACIrN,UAAS,UAAKA,GAAL,UACTkK,KAAMA,EACN3D,MAAO,WACP1G,KAAM,UACNyK,cAAe+C,KAEnB,SAAC,GAAD,CACIrN,UAAS,UAAKA,GAAL,UACTkK,KAAMA,EACN3D,MAAO,SACP2E,aAAcmC,KAElB,SAAC,GAAD,CACIrN,UAAS,UAAKA,GAAL,UACTkK,KAAMA,EACN3D,MAAO,cACP1G,KAAM,cACN4M,kBAAmBY,KAGvB,SAAC,GAAD,CACIrN,UAAS,UAAKA,GAAL,YACTkK,KAAMA,EACNtI,KAAMhC,EAAMgC,KACZ8H,aAtDM,SAAClI,GACnB,IAAMsG,EAAKlI,EAAMsK,KAAK1J,KAAO,GAC7B0M,EAAY1F,EAAOM,GAAIA,EAAItG,IAqDf0K,oBAlDY,SAAC1K,EAAYyJ,GACrCgC,EAAazF,EAAOM,GAAItG,EAAMhB,IAAKyK,YCtJrCtK,GAAUwD,EAAAA,GAAAA,MAyEhB,OAvEA,SAAevE,GACX,OACI,gBAAKI,UAAS,UAAKJ,EAAMI,WAAzB,UACI,SAAC,IAAD,CAAKyC,QAAQ,SAAb,UACI,UAAC,IAAD,CAAK8B,GAAI,GAAT,WACI,SAAC,IAAD,CAAKvE,UAAS,UAAKJ,EAAMI,UAAX,WAAd,UACI,0BAAOJ,EAAMwB,WAEjB,SAAC,IAAD,CAAKpB,UAAS,UAAKJ,EAAMI,UAAX,WAAd,UACI,UAAC,IAAD,CAAKuE,GAAI,GAAT,UACK3E,EAAM6N,MAAMvK,OAAS,GAClBtD,EAAM6N,MAAM9L,KAAI,SAACH,EAAO2B,GACpB,GAAI3B,EAAMyJ,SAAWrL,EAAM0F,OACvB,OACI,SAAC,IAAD,CAEItF,UAAS,UAAKJ,EAAMI,UAAX,UACTuB,QAAS,kBAAM3B,EAAM4K,WAAWhJ,EAAO5B,EAAMgC,OAHjD,UAKI,UAAC,IAAD,CAAK2C,GAAI,GAAT,WACI,UAAC,IAAD,CAAK9B,QAAQ,gBAAgB1C,MAAM,SAAnC,WACI,UAAC,IAAD,CACIwE,GAAI,GACJvE,UAAS,UAAKJ,EAAMI,UAAX,eAFb,WAII,SAACJ,EAAMgC,KAAP,IAJJ,KAImB,0BAAOJ,EAAM3B,WAEhC,iBACIG,UAAS,UAAKJ,EAAMI,UAAX,eADb,UAGI,SAAC,GAAQ0N,aAAT,UAGR,SAAC,IAAD,CAAKjL,QAAQ,gBAAb,UACI,kBACIzC,UAAS,UAAKJ,EAAMI,UAAX,eADb,WAGI,SAAC,GAAQ2N,aAAT,IAAyB,IACxB/E,GAAAA,CAAOpH,EAAM2I,SAASd,OACnB,uBAzBpB,eACiBlG,QAiCjC,SAAC,IAAD,CAAKnD,UAAS,UAAKJ,EAAMI,UAAX,SAAd,UACI,SAAC,IAAD,CAAKuE,GAAI,GAAT,UACI,UAAC,IAAD,CACIxE,MAAM,SACNwB,QAAS,kBAAM3B,EAAM6B,eAAe,aAFxC,WAII,iBAAMzB,UAAS,UAAKJ,EAAMI,UAAX,cAAf,UACI,SAAC,GAAQ4N,WAAT,OAEJ,iBAAM5N,UAAS,UAAKJ,EAAMI,UAAX,cAAf,SACKW,GAAQkN,iCC7C/ClN,GAAUwD,EAAAA,GACVnE,GAAY8E,EAAAA,GAAAA,QA0NlB,OAxNA,SAAqBlF,GACjB,IAAM4H,GAAcC,EAAAA,EAAAA,MACdzG,GAAWC,EAAAA,EAAAA,MAEjB,GAA8BC,EAAAA,EAAAA,WAAkB,GAAhD,eAAOwC,EAAP,KAAgB2H,EAAhB,KACA,GAA8BnK,EAAAA,EAAAA,WAAkB,GAAhD,eAAO+C,EAAP,KAAgB8I,EAAhB,KACA,GAA0C7L,EAAAA,EAAAA,WAAkB,GAA5D,eAAO4M,EAAP,KAAsBd,EAAtB,KACA,GAAwC9L,EAAAA,EAAAA,WAAc,yBAAtD,eAAOiK,EAAP,KAAqBC,EAArB,KACA,GAA0ClK,EAAAA,EAAAA,WAAc,yBAAxD,eAAOgD,EAAP,KAAsB6J,EAAtB,KAEMC,GAA2BlN,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAgBA,EAAMiN,YAC7DjJ,GAAmBjE,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAgBA,EAAMgE,WAE3D,GAA0B7D,EAAAA,EAAAA,UAAsB,IAAhD,eAAOuM,EAAP,KAAcQ,GAAd,KAEMC,GAAU,mCAAG,WAAOvI,GAAP,gGAEYE,EAAAA,EAAAA,kBAA8BF,GAF1C,OAEL1D,EAFK,OAGXjB,GAASmN,EAAAA,EAAAA,IAAIlM,IACbmM,GAASzI,GAJE,gDAMXxD,QAAQC,IAAR,MANW,yDAAH,sDAUViM,GAAY,mCAAG,WAAO1I,EAAanE,GAApB,gGAEUqE,EAAAA,EAAAA,cAA0BF,EAAK,CAAE9F,KAAM2B,IAFjD,OAEPS,EAFO,OAGbjB,GAASmN,EAAAA,EAAAA,IAAIlM,IACbjB,GAASsN,EAAAA,EAAAA,IAAgB,CAAEtI,KAAML,EAAKnE,MAAOA,KAJhC,gDAMbW,QAAQC,IAAR,MANa,yDAAH,wDAUZgM,GAAQ,mCAAG,WAAOzI,GAAP,gGAE2BE,EAAAA,EAAAA,SAAqBF,GAFhD,OAEH1D,EAFG,OAGTgM,GAAShM,GAHA,gDAKTE,QAAQC,IAAR,MALS,yDAAH,sDASRmM,GAAQ,mCAAG,WAAO5I,EAAaC,GAApB,iGAETmH,GAAW,GACLyB,EAAW,CACb3O,KAAM+F,EAAK/F,MAJN,SAMyBgG,EAAAA,EAAAA,UAAsBF,EAAK6I,GANpD,UAMHC,EANG,OAOHC,EAASD,EAAcjO,KAAO,IAEhCoF,EAAK+E,WAAY8D,EATZ,2BAUe7I,EAAK+E,UAVpB,iEAUMnJ,EAVN,kBAWqCqE,EAAAA,EAAAA,kBAClCF,EACA+I,EACA,CAAEpB,OAAQ9L,IAdb,sKAkBEoE,EAAK+E,SAlBP,YAqBL/E,IAAQ6I,EArBH,wBAsBL7I,EAAKuE,QAAUoD,OAAO3E,GAAAA,CAAOhD,EAAKuE,SAASqD,MAAMnE,OAAO,MAtBnD,UAwB8BxD,EAAAA,EAAAA,WAAuBF,EAAK+I,EAAQ9I,GAxBlE,iBA2BDyF,GAAW,GACX0B,GAAW,GACXmB,GAAWvI,IACXP,EAAAA,EAAAA,GAAyB,UAAW,4BAA6B,KA9BhE,0DAkCTjD,QAAQC,IAAR,MAlCS,uEAAH,wDAiDRuM,GAAuB,SAACnN,EAAY8D,GACtC,IAAIgG,GAAO,wBACPlK,EAAQ,GAIZ,OAFAiK,GAAW,GAEH7J,GACJ,IAAK,WACD8J,GACI,SAAC,KAAD,CACIC,cAAeqD,EAAAA,GACfnD,iBAAkBC,EAAAA,GAClBjC,SAAU,SAACkC,GAAD,OAvBT,SAACnK,EAAYqN,EAAgBvJ,GAErC,aADDuJ,GAEAN,GAASxJ,EAAQvE,KAAT,QAAC,UAAkBgB,GAAnB,IAA0ByJ,OAAQ3F,KAoBToE,CAAaiC,EAAWnK,EAAO8D,IACxDsG,OAAQkD,KAGhB1N,EAAQ,WACR,MACJ,IAAK,aACDkK,GAAO,SAAC,EAAD,IACPlK,EAAQ,UAER,MACJ,IAAK,YACDkK,GAAO,SAAC,EAAD,IACPlK,EAAQ,QAER,MACJ,IAAK,WACDkK,GAAO,SAAC,EAAD,IACPlK,EAAQ,uBAOhBgK,EAAgB,CAAEE,KAAMA,EAAMlK,MAAOA,KAGnCoJ,GAAa,SAAChJ,EAAaI,GAC7BoL,GAAiB,GACjBe,GACI,SAAC,GAAD,CACI7D,KAAM1I,EACNI,KAAMA,EACNiL,WAAY,WACRuB,GAAS5G,EAAOM,KAEpBiH,cAAehK,EAAQQ,QACvByH,iBAAkB,SAACxL,GAAD,OAAoBwL,EAAiBxL,IACvDuL,WAAY,SAACvL,GAAD,OAAoBuL,EAAWvL,QAsBvD,OAjBAe,EAAAA,EAAAA,YAAU,WACFyL,GAAYA,EAAS9K,OAAS,EAC9B8K,EAASgB,SAAQ,SAACxN,GACVA,EAAMhB,MAAQgH,EAAOM,KACrBsG,GAAS5M,EAAMhB,KACfQ,GAASmN,EAAAA,EAAAA,IAAI3M,QAIrB0M,GAAW1G,EAAOM,MAEvB,CAACN,KAEJjF,EAAAA,EAAAA,YAAU,WACDmB,GAAS0H,EAAgB,CAAEE,MAAM,wBAAOlK,MAAO,OACrD,CAACsC,KAGA,SAAC,IAAD,CAAK1D,UAAS,UAAKJ,EAAMI,UAAX,YAAwBA,IAAtC,UACI,UAAC,IAAD,CAAKuE,GAAI,GAAT,WACI,SAAC0K,EAAA,EAAD,CACIjP,UAAWkP,EAAAA,GAAAA,OACX/N,SAAU4D,EAAQlF,KAClB4B,eAAgBkN,GAChB3L,kBAAmB,SAACxB,GAAD,OAAgB6M,GAAatJ,EAAQvE,IAAKgB,OAEjE,gBAAKxB,UAAS,UAAKA,GAAL,UAAd,UACI,gBAAKA,UAAS,UAAKA,GAAL,kBAAd,SACKW,GAAQ8M,MAAMnI,OAAO3D,KAAI,SAACH,EAAO2B,GAC9B,OACI,SAAC,GAAD,CAEI1B,eAAgB,SAAC0N,GAAD,OACZR,GAAqBQ,EAAW3N,EAAMA,QAE1CxB,UAAS,UAAKA,GAAL,gBACToB,MAAOI,EAAMJ,MACbqM,MAAOA,EACPnI,OAAQ9D,EAAMA,MACdI,KAAMJ,EAAMI,KACZ4I,WAAYA,IAVhB,gBACkBrH,YAelC,SAACiJ,EAAA,EAAD,CACInI,QAASA,EACTkH,aAAcA,EAAaG,KAC3B5H,QAASA,EACTG,WAAY,SAACrC,GACT6J,EAAW7J,IAEfJ,MAAO+J,EAAa/J,SAGxB,SAAC,EAAD,CACI6C,QAASA,EACTP,QAASoK,EACTjK,WAAY,kBAAMmJ,GAAiB,IACnC9I,cAAeA","sources":["components/Header/components/User/index.tsx","components/Header/index.tsx","components/DrawerCustom/index.tsx","features/Project/components/FormMember/Member/index.tsx","features/Project/components/FormMember/index.tsx","features/Project/components/FormRoles/InputName/index.tsx","features/Project/components/FormRoles/Roles/index.tsx","features/Project/components/FormRoles/SelectPermission/index.tsx","features/Project/components/FormRoles/index.tsx","features/Project/components/FormSetRole/Member/index.tsx","features/Project/components/FormSetRole/SelectPermission/index.tsx","features/Project/components/FormSetRole/index.tsx","custom-fields/DateField/index.tsx","custom-fields/SelectField/index.tsx","features/Project/components/FormTask/index.tsx","features/Project/components/TaskDetail/DateTask/index.tsx","features/Project/components/TaskDetail/Header/index.tsx","features/Project/components/TaskDetail/SelectTask/index.tsx","features/Project/components/TaskDetail/StatusTask/index.tsx","features/Project/components/FormSubTask/index.tsx","features/Project/components/TaskDetail/SubTask/index.tsx","features/Project/components/TaskDetail/TextAreaTask/index.tsx","features/Project/components/TaskDetail/index.tsx","features/Project/components/Tasks/index.tsx","features/Project/index.tsx"],"sourcesContent":["import { Avatar, Col, Dropdown, Menu, Row } from 'antd'\nimport { User } from '../../../../types/global'\nimport { PlusOutlined } from '@ant-design/icons'\nimport { randomColorAvatar } from '../../../../functions/global'\n\ntype IProps = {\n    className: string\n    user: User\n\n    menuUser: any\n}\n\nfunction UserDetail(props: IProps) {\n    const name = props.user.name\n\n    return (\n        <Row align=\"middle\">\n            <Col className={`${props.className}--name`}>\n                <span>{props.user.name}</span>\n            </Col>\n            <Dropdown\n                overlay={props.menuUser}\n                placement=\"bottomRight\"\n                arrow\n                className={`${props.className}--avatar`}\n            >\n                <Avatar style={{ backgroundColor: randomColorAvatar(props.user._id) }}>\n                    {name?.slice(name?.indexOf(' ') + 1, name?.indexOf(' ') + 2)}\n                </Avatar>\n            </Dropdown>\n        </Row>\n    )\n}\n\nexport default UserDetail\n","import { Col, Dropdown, Input, Menu, Row } from 'antd'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport userApi from '../../api/userApi'\nimport { setSignOut, setUser } from '../../app/userSlice'\nimport { classComponent } from '../../constants/className'\nimport { User } from '../../types/global'\nimport Search from '../Search'\nimport UserDetail from './components/User'\nimport { DownOutlined } from '@ant-design/icons'\n\nimport './Header.scss'\nimport { NavLink } from 'react-router-dom'\nimport { CONTENT_COMPONENT } from '../../constants/global'\n\ntype TProps = {\n    className: string\n    title?: string\n    dropdown?: any\n    actionDropdown?: Function\n    navigate?: Array<any>\n\n    changeNameProject?: Function\n}\n\nconst content = CONTENT_COMPONENT.header\nconst className = classComponent.header\n\nfunction Header(props: TProps) {\n    const user: User = useSelector((state: any) => state.user)\n    const dispatch = useDispatch()\n    const [title, setTitle] = useState<string>(props.dropdown)\n\n    const menuDropdown = (\n        <Menu\n            onClick={(value) => {\n                if (props.actionDropdown) props.actionDropdown(value.key)\n            }}\n        >\n            {content.menuDropdown.map((value) => {\n                return (\n                    <Menu.Item key={value.key}>\n                        <value.icon /> {value.text}\n                    </Menu.Item>\n                )\n            })}\n        </Menu>\n    )\n\n    const menuUser = (\n        <Menu onClick={(value) => handleUser(value.key)}>\n            {content.menuUser.map((value) => {\n                return (\n                    <Menu.Item key={value.key}>\n                        <value.icon /> {value.text}\n                    </Menu.Item>\n                )\n            })}\n        </Menu>\n    )\n\n    const getUser = async (_id: string) => {\n        try {\n            const response: any = await userApi.getUserDetail(_id)\n            dispatch(setUser(response))\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const handleUser = (value: any) => {\n        switch (value) {\n            case 'profile':\n                break\n            case 'logout':\n                dispatch(setSignOut({ isLogin: false, _id: '' }))\n                break\n            default:\n                break\n        }\n    }\n\n    useEffect(() => {\n        getUser(user._id)\n        setTitle(props.dropdown)\n    }, [user.name !== undefined, props.dropdown])\n\n    return (\n        <Row align=\"middle\" justify=\"space-between\" className={`${className} ${props.className}`}>\n            <Col>\n                <Row>\n                    {props.dropdown ? (\n                        <span className={`${className}__title`}>\n                            <Dropdown overlay={menuDropdown} placement=\"bottomLeft\" arrow>\n                                <button className={`${className}__title--icon`}>\n                                    <DownOutlined />\n                                </button>\n                            </Dropdown>\n\n                            <Input\n                                className={`${className}__title--input`}\n                                bordered={false}\n                                value={title}\n                                onChange={(e) => setTitle(e.target.value)}\n                                onBlur={() => {\n                                    props.changeNameProject &&\n                                        props.changeNameProject(title || props.dropdown)\n                                }}\n                            />\n                        </span>\n                    ) : (\n                        <span className={`${className}__title`}>{props.title}</span>\n                    )}\n                </Row>\n                {props.navigate && props.navigate.length && (\n                    <Row className={`${className}__navigate`}>\n                        {props.navigate.map((value, index) => {\n                            return (\n                                <Col key={`header-navigate-${index} `}>\n                                    <NavLink\n                                        to={value.path}\n                                        className={({ isActive }) =>\n                                            isActive\n                                                ? `${className}__navigate--link active`\n                                                : `${className}__navigate--link`\n                                        }\n                                    >\n                                        {value.text}\n                                    </NavLink>\n                                </Col>\n                            )\n                        })}\n                    </Row>\n                )}\n            </Col>\n            <Col>\n                <Row align=\"middle\">\n                    <Col className={`${className}__search`}>\n                        <Search onSearch={(value: any) => console.log(value)} />\n                    </Col>\n                    <Col>\n                        <UserDetail\n                            menuUser={menuUser}\n                            user={user}\n                            className={`${className}__detail`}\n                        />\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    )\n}\n\nexport default Header\n","import { Drawer, Spin } from 'antd';\nimport { useEffect } from 'react';\n\nimport './DrawerCustom.scss';\n\ntype IProps = {\n    visible: boolean;\n    loading: boolean;\n\n    closeModal: Function;\n    title?: string;\n\n    contentDrawer: any;\n};\n\nfunction DrawerCustom(props: IProps) {\n    useEffect(() => {}, [props.visible]);\n\n    return (\n        <Drawer\n            title={props.title || false}\n            placement=\"right\"\n            width={550}\n            onClose={() => props.closeModal()}\n            visible={props.visible}\n            getContainer={false}\n            closable={false}\n        >\n            <Spin spinning={props.loading}>{props.contentDrawer}</Spin>\n        </Drawer>\n    );\n}\n\nexport default DrawerCustom;\n","import { Avatar, Col, Row } from 'antd'\nimport { CONTENT_PROJECT } from '../../../../../constants/global'\nimport { randomColorAvatar } from '../../../../../functions/global'\nimport { User } from '../../../../../types/global'\n\ntype IProps = {\n    projectAuthor: string\n    value: User\n    type: 'add' | 'delete'\n    handleMember: Function\n\n    className: string\n}\n\nconst content = CONTENT_PROJECT.formMember\n\nfunction MemberItem(props: IProps) {\n    const { className, value, type, handleMember, projectAuthor } = props\n\n    return (\n        <Row align=\"middle\" className={`${className}-item`}>\n            <Col xs={6} className={`${className}-item--avatar`}>\n                <Avatar\n                    shape=\"square\"\n                    size={55}\n                    style={{\n                        backgroundColor: randomColorAvatar(value._id),\n                        borderRadius: 15,\n                    }}\n                >\n                    {value.name?.slice(0, 1)}\n                </Avatar>\n            </Col>\n\n            <Col xs={16} className={`${className}-item--desc`}>\n                <span>{value.name}</span>\n                <span>{value.email}</span>\n            </Col>\n\n            {projectAuthor !== value._id && (\n                <Col xs={2}>\n                    <button\n                        onClick={() => handleMember(value._id, type)}\n                        className={`${className}-btn`}\n                    >\n                        {type === 'add' ? <content.btnSubmit /> : <content.btnDelete />}\n                    </button>\n                </Col>\n            )}\n        </Row>\n    )\n}\n\nexport default MemberItem\n","import { Avatar, Col, Row } from 'antd'\nimport { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport projectsApi from '../../../../api/projectsApi'\nimport userApi from '../../../../api/userApi'\nimport { addMember, deleteMember } from '../../../../app/projectSlice'\nimport { addMemberToProject, deleteMemberToProject } from '../../../../app/projectsSlice'\nimport Search from '../../../../components/Search'\nimport { classProject } from '../../../../constants/className'\nimport { CONTENT_PROJECT } from '../../../../constants/global'\nimport { openNotificationWithIcon, randomColorAvatar } from '../../../../functions/global'\nimport { DataMembers } from '../../../../types/api'\nimport { Member, Project, User } from '../../../../types/global'\nimport MemberItem from './Member'\n\ntype IProps = {}\n\nconst content = CONTENT_PROJECT.formMember\nconst className = classProject.member\n\nfunction FormMember(props: IProps) {\n    const dispatch = useDispatch()\n    const project: Project = useSelector((state: any) => state.project)\n    const user: User = useSelector((state: any) => state.user)\n\n    const [userSearch, setUserSearch] = useState<Array<any>>()\n    const findUser = async (mail: string) => {\n        try {\n            const response: Array<User> = await userApi.getUser(mail)\n\n            if (response.length === 0) {\n                openNotificationWithIcon('warning', \"Can't find user!\", '')\n            } else {\n                let arr = []\n                for (const user of response) {\n                    let filter = project.members.filter((item) => item.user._id === user._id)\n                    arr.push({ ...user, visible: filter.length === 0 ? true : false })\n                }\n\n                setUserSearch(arr)\n            }\n        } catch (error: any) {\n            console.log(error)\n        }\n    }\n\n    const postMember = async (pid: string, data: DataMembers) => {\n        try {\n            const response: Member = await projectsApi.postMembers(pid, data)\n            dispatch(addMember(response))\n            dispatch(addMemberToProject({ _pid: pid, value: response }))\n            setUserSearch([])\n        } catch (error: any) {\n            console.log(error)\n        }\n    }\n\n    const deleteMemberAPI = async (pid: string, uid: string) => {\n        try {\n            const response = await projectsApi.deleteMembers(pid, uid)\n            dispatch(deleteMember(uid))\n            dispatch(deleteMemberToProject({ _pid: pid, value: uid }))\n        } catch (error: any) {\n            console.log(error)\n        }\n    }\n\n    const handleSearch = (value: string) => {\n        value && findUser(value)\n    }\n\n    const handleMember = (value: any, type: 'add' | 'delete') => {\n        if (type === 'delete') {\n            deleteMemberAPI(project._id, value)\n        } else {\n            const data: DataMembers = {\n                user: value,\n            }\n            postMember(project._id, data)\n        }\n    }\n\n    return (\n        <Row>\n            <Col xs={12} className={`${className}-search`}>\n                <Search onSearch={handleSearch} />\n                <Row>\n                    <Col xs={24} className={`${className}-list`}>\n                        {userSearch &&\n                            userSearch.length > 0 &&\n                            userSearch.map((value, index) => {\n                                if (user._id !== value._id && value.visible)\n                                    return (\n                                        <MemberItem\n                                            projectAuthor={project.author}\n                                            key={`member-project-${index}`}\n                                            className={`${className}`}\n                                            value={value}\n                                            type={'add'}\n                                            handleMember={handleMember}\n                                        />\n                                    )\n                            })}\n                    </Col>\n                </Row>\n            </Col>\n\n            <Col xs={12} className={`${className}-list`}>\n                {project.members.map((value, index) => {\n                    if (user._id !== value.user._id)\n                        return (\n                            <MemberItem\n                                projectAuthor={project.author}\n                                key={`member-project-${index}`}\n                                className={`${className}`}\n                                value={value.user}\n                                type={'delete'}\n                                handleMember={handleMember}\n                            />\n                        )\n                })}\n            </Col>\n        </Row>\n    )\n}\n\nexport default FormMember\n","import { Input, Row } from 'antd'\n\ntype IProps = {\n    className?: string\n    placeholder?: string\n    name?: string\n    label?: string\n    value: any\n\n    onChange: Function\n}\n\nfunction InputName(props: IProps) {\n    return (\n        <Row justify=\"center\" align=\"middle\" className={`${props.className}`}>\n            {props.label && (\n                <label htmlFor={props.name} className={`${props.className}--label`}>\n                    {props.label}\n                </label>\n            )}\n            <Input\n                name={props.name}\n                className={`${props.className}--input`}\n                placeholder={props.placeholder}\n                bordered={false}\n                value={props.value.name}\n                onChange={(e) => props.onChange(e.target.value)}\n            />\n        </Row>\n    )\n}\n\nexport default InputName\n","import { Col, Row, Tag } from 'antd'\nimport { Role } from '../../../../../types/global'\n\ntype IProps = {\n    className?: string\n    icon: any\n\n    roles: Array<Role>\n    handleDelete: Function\n}\n\nfunction Roles(props: IProps) {\n    return (\n        <>\n            <Row className={`${props.className}--title`}>\n                <span>Roles</span>\n            </Row>\n            <Row className={`${props.className}`}>\n                <Col xs={24}>\n                    {props.roles.map((value, index) => {\n                        if (!value.default)\n                            return (\n                                <Row\n                                    key={`role-${index}`}\n                                    justify=\"space-between\"\n                                    align=\"middle\"\n                                    className={`${props.className}--item`}\n                                >\n                                    <div className={`${props.className}--name`}>\n                                        <span>{value.name}</span>\n                                        <div>\n                                            {value.permission.length === 8 ? (\n                                                <Tag key={`tag-all`} color=\"lime\">\n                                                    ALL\n                                                </Tag>\n                                            ) : (\n                                                value.permission.map((value, index) => {\n                                                    return (\n                                                        <Tag\n                                                            key={`tag-${index}`}\n                                                            color=\"lime\"\n                                                            style={{\n                                                                marginRight: 3,\n                                                                marginBottom: 3,\n                                                                fontSize: '0.6rem',\n                                                            }}\n                                                        >\n                                                            {value}\n                                                        </Tag>\n                                                    )\n                                                })\n                                            )}\n                                        </div>\n                                    </div>\n                                    {!value.default && (\n                                        <button\n                                            className={`${props.className}--btn`}\n                                            onClick={() => props.handleDelete(value)}\n                                        >\n                                            <props.icon />\n                                        </button>\n                                    )}\n                                </Row>\n                            )\n                    })}\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default Roles\n","import { Row, Select, Tag } from 'antd'\nimport { useState } from 'react'\nimport { randomColorAvatar } from '../../../../../functions/global'\n\ntype SelectPermissionProps = {\n    className?: string\n    label?: string\n    value: any\n\n    options: Array<{ _id: string; name: string }>\n    onChange: Function\n}\n\nconst { Option } = Select\n\nfunction SelectPermission(props: SelectPermissionProps) {\n    function tagRender(props: any) {\n        const { label, value, closable, onClose } = props\n\n        return (\n            <Tag\n                color={randomColorAvatar(value)}\n                closable={closable}\n                onClose={onClose}\n                style={{ marginRight: 3 }}\n            >\n                {label}\n            </Tag>\n        )\n    }\n\n    return (\n        <Row align=\"middle\" className={`${props.className}`}>\n            {props.label && <label className={`${props.className}--label`}>{props.label}</label>}\n            <Select\n                mode={'tags'}\n                bordered={false}\n                className={`${props.className}--input`}\n                value={props.value.permission}\n                onChange={(val) => props.onChange(val)}\n                tagRender={tagRender}\n            >\n                {props.options.map((value: any) => {\n                    return (\n                        <Option key={value._id} value={value._id}>\n                            {value.name}\n                        </Option>\n                    )\n                })}\n            </Select>\n        </Row>\n    )\n}\n\nexport default SelectPermission\n","import { Col, Row } from 'antd'\nimport { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport projectsApi from '../../../../api/projectsApi'\nimport { classProject } from '../../../../constants/className'\nimport { CONTENT_PROJECT } from '../../../../constants/global'\nimport { openNotificationWithIcon } from '../../../../functions/global'\nimport { Role } from '../../../../types/global'\nimport InputName from './InputName'\nimport Roles from './Roles'\nimport SelectPermission from './SelectPermission'\n\ntype IProps = {}\n\nconst content = CONTENT_PROJECT.formRoles\nconst className = classProject.roles\n\nfunction FormRoles(props: IProps) {\n    const params: any = useParams()\n\n    const [dataAddRole, setDataAddRole] = useState<any>({ name: '', permission: [] })\n    const [roles, setRoles] = useState<Array<Role>>([])\n\n    const getRoles = async (id: string) => {\n        try {\n            const response = await projectsApi.getRoles(id)\n            setRoles(response)\n        } catch (error: any) {\n            console.log(error)\n        }\n    }\n\n    const postRoles = async (id: string, data: any) => {\n        try {\n            const response = await projectsApi.postRoles(id, data)\n            console.log(response)\n\n            if (response) {\n                getRoles(id)\n                setDataAddRole({ name: '', permission: [] })\n                openNotificationWithIcon('success', 'Add role successfully!', '')\n            }\n        } catch (error: any) {\n            console.log(error)\n        }\n    }\n\n    const deleteRoles = async (pid: string, id: string) => {\n        try {\n            const response = await projectsApi.deleteRoles(pid, id)\n            getRoles(pid)\n        } catch (error: any) {\n            console.log(error)\n        }\n    }\n\n    const handleSubmit = () => postRoles(params.id, dataAddRole)\n    const handleDelete = (value: Role) => {\n        deleteRoles(value.project || '', value._id || '')\n    }\n\n    useEffect(() => {\n        getRoles(params.id)\n    }, [params])\n\n    return (\n        <Row>\n            <Col xs={24}>\n                <InputName\n                    className={`${className}-field`}\n                    name={'name'}\n                    label={'Name Role *'}\n                    value={dataAddRole}\n                    onChange={(value: string) => setDataAddRole({ ...dataAddRole, name: value })}\n                />\n                <SelectPermission\n                    options={content.optionsPermission}\n                    className={`${className}-field`}\n                    label={'Permission'}\n                    value={dataAddRole}\n                    onChange={(value: any) => setDataAddRole({ ...dataAddRole, permission: value })}\n                />\n\n                <Row align={'middle'} justify={'center'} onClick={handleSubmit}>\n                    <button type={'submit'} className={`${className}-btn`}>\n                        {content.btnSubmit}\n                    </button>\n                </Row>\n            </Col>\n\n            <Col xs={24}>\n                <Roles\n                    className={`${className}-list`}\n                    roles={roles}\n                    icon={content.iconDeleteRole}\n                    handleDelete={handleDelete}\n                />\n            </Col>\n        </Row>\n    )\n}\n\nexport default FormRoles\n","import { Avatar, Col, Row } from 'antd'\nimport { randomColorAvatar } from '../../../../../functions/global'\nimport { User } from '../../../../../types/global'\n\ntype IProps = {\n    value: User\n\n    className: string\n}\n\nfunction MemberItem(props: IProps) {\n    const { className, value } = props\n\n    return (\n        <Row align=\"middle\" className={`${className}-item`}>\n            <Col xs={6} className={`${className}-item--avatar`}>\n                <Avatar\n                    shape=\"square\"\n                    size={55}\n                    style={{\n                        backgroundColor: randomColorAvatar(value._id),\n                        borderRadius: 15,\n                    }}\n                >\n                    {value.name?.slice(0, 1)}\n                </Avatar>\n            </Col>\n\n            <Col xs={18} className={`${className}-item--desc`}>\n                <span>{value.name}</span>\n                <span>{value.email}</span>\n            </Col>\n        </Row>\n    )\n}\n\nexport default MemberItem\n","import { Row, Select } from 'antd'\nimport { Role } from '../../../../../types/global'\n\ntype SelectPermissionProps = {\n    className?: string\n    label?: string\n    value: any\n\n    options: Array<Role>\n    onChange: Function\n}\n\nconst { Option } = Select\n\nfunction SelectPermission(props: SelectPermissionProps) {\n    return (\n        <Row align=\"middle\" className={`${props.className}`}>\n            {props.label && <label className={`${props.className}--label`}>{props.label}</label>}\n\n            <Select\n                defaultValue={props.value ? props.value._id : ''}\n                bordered={false}\n                className={`${props.className}--input`}\n                onChange={(val) => props.onChange(val)}\n            >\n                {props.options.map((value: Role) => {\n                    if (!value.default)\n                        return (\n                            <Option key={value._id} value={value._id}>\n                                {value.name}\n                            </Option>\n                        )\n                })}\n            </Select>\n        </Row>\n    )\n}\n\nexport default SelectPermission\n","import { Col, Row } from 'antd'\nimport { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport projectsApi from '../../../../api/projectsApi'\nimport { classProject } from '../../../../constants/className'\nimport { DataMembers } from '../../../../types/api'\nimport { Project, Role } from '../../../../types/global'\nimport MemberItem from './Member'\nimport SelectPermission from './SelectPermission'\n\ntype IProps = {}\n\nconst className = classProject.setRoles\n\nfunction FormSetRole(props: IProps) {\n    const params: any = useParams()\n    const project: Project = useSelector((state: any) => state.project)\n\n    const [roles, setRoles] = useState<Array<Role>>([])\n\n    const getRoles = async (id: string) => {\n        try {\n            const response = await projectsApi.getRoles(id)\n            setRoles(response)\n        } catch (error: any) {\n            console.log(error)\n        }\n    }\n\n    const patchRole = async (pid: string, uid: string, data: DataMembers) => {\n        try {\n            const response = await projectsApi.patchMembers(pid, uid, data)\n            console.log(response)\n            getRoles(pid)\n        } catch (error: any) {\n            console.log(error)\n        }\n    }\n\n    const setRoleForMember = (value: any, uid: string) => {\n        patchRole(project._id, uid, { role: value })\n    }\n\n    useEffect(() => {\n        getRoles(params.id)\n    }, [params])\n\n    return (\n        <Row>\n            <Col xs={24} className={`${className}`}>\n                {project &&\n                    project.members.map((value, index) => {\n                        if (project.author !== value.user._id)\n                            return (\n                                <Row\n                                    key={`member-role-${index}`}\n                                    align=\"middle\"\n                                    className={`${className}-item`}\n                                >\n                                    <MemberItem\n                                        value={value.user}\n                                        className={`${className}--member`}\n                                    />\n                                    <SelectPermission\n                                        options={roles}\n                                        className={`${className}--field`}\n                                        label={'Role'}\n                                        value={value.role}\n                                        onChange={(valueSelect: any) =>\n                                            setRoleForMember(valueSelect, value.user._id)\n                                        }\n                                    />\n                                </Row>\n                            )\n                    })}\n            </Col>\n        </Row>\n    )\n}\n\nexport default FormSetRole\n","import moment from 'moment'\n\nimport { DatePicker, Form } from 'antd'\n\nimport './DateField.scss'\n\ntype DateFieldProps = {\n    field: any\n    form: any\n\n    label: string\n    placeholder: string\n    disabled: boolean\n\n    className: string\n}\n\nfunction DateField(props: DateFieldProps) {\n    const { field, form, label, className } = props\n\n    const { name, value } = field\n    const { setFieldValue } = form\n\n    const valueFormat = moment(value)\n\n    const touched = form.touched[field.name]\n    const hasError = form.errors[field.name]\n    const submittedError = hasError\n    const touchedError = hasError && touched\n\n    return (\n        <Form.Item\n            help={submittedError || touchedError ? hasError : false}\n            validateStatus={submittedError || touchedError ? 'error' : ''}\n        >\n            {label && (\n                <label htmlFor={name} className={`${className}-label`}>\n                    {label}\n                </label>\n            )}\n            <DatePicker\n                allowClear={false}\n                id={name}\n                className={`${className}-input-field`}\n                defaultValue={valueFormat || moment()}\n                value={value || moment()}\n                format={`DD/MM/YYYY`}\n                onChange={(val) => setFieldValue(name, val)}\n                bordered={false}\n            />\n        </Form.Item>\n    )\n}\n\nexport default DateField\n","import { Form, Select, Tag } from 'antd'\nimport { randomColorAvatar } from '../../functions/global'\n\ntype SelectFieldProps = {\n    field: any\n    form: any\n\n    type: string\n    label: string\n    options: Array<any>\n    placeholder: string\n    disabled: boolean\n\n    className: string\n}\n\nconst { Option } = Select\n\nfunction SelectField(props: SelectFieldProps) {\n    const { field, form, options, label, disabled, className } = props\n\n    const { name } = field\n\n    const touched = form.touched[field.name]\n    const hasError = form.errors[field.name]\n\n    const submittedError = hasError\n    const touchedError = hasError && touched\n\n    const handleSelectedOptionChange = (selectedOption: any) => {\n        const changeEvent = {\n            target: {\n                name: name,\n                value: selectedOption,\n            },\n        }\n\n        field.onChange(changeEvent)\n    }\n\n    function tagRender(props: any) {\n        const { label, value, closable, onClose } = props\n\n        return (\n            <Tag\n                color={randomColorAvatar(value)}\n                closable={closable}\n                onClose={onClose}\n                style={{ marginRight: 3 }}\n            >\n                {label}\n            </Tag>\n        )\n    }\n\n    return (\n        <Form.Item\n            help={submittedError || touchedError ? hasError : false}\n            validateStatus={submittedError || touchedError ? 'error' : ''}\n        >\n            {label && (\n                <label htmlFor={name} className={`${className}-label`}>\n                    {label}\n                </label>\n            )}\n            <Select\n                mode={'tags'}\n                id={name}\n                {...field}\n                bordered={false}\n                className={`${className}-input-field`}\n                defaultValue={[]}\n                onChange={handleSelectedOptionChange}\n                tagRender={tagRender}\n            >\n                {options.map((value) => {\n                    return (\n                        <Option key={value._id} value={value._id}>\n                            {value.user.name}\n                        </Option>\n                    )\n                })}\n            </Select>\n        </Form.Item>\n    )\n}\n\nexport default SelectField\n","import { Col, Row } from 'antd'\nimport { FastField, Form } from 'formik'\nimport { useSelector } from 'react-redux'\nimport { classProject } from '../../../../constants/className'\nimport { CONTENT_PROJECT } from '../../../../constants/global'\nimport ButtonField from '../../../../custom-fields/BtnSubmit'\nimport DateField from '../../../../custom-fields/DateField'\nimport InputField from '../../../../custom-fields/InputField'\nimport SelectField from '../../../../custom-fields/SelectField'\n\nimport { HandleForm } from '../../../../types/auth'\nimport { Project } from '../../../../types/global'\n\nconst content = CONTENT_PROJECT.formTask\n\nfunction FormTask(props: HandleForm) {\n    const project: Project = useSelector((state: any) => state.project)\n\n    return (\n        <Form onSubmit={props.handleSubmit}>\n            <FastField\n                component={InputField}\n                name={content.fieldsName.name}\n                type={content.fieldsName.type}\n                className={`${classProject.form}--field`}\n                label={content.fieldsName.label}\n            />\n            <Row>\n                <Col xs={12}>\n                    <FastField\n                        component={DateField}\n                        name={content.fieldsExpires.name}\n                        className={`${classProject.form}--field`}\n                        label={content.fieldsExpires.label}\n                    />\n                </Col>\n                <Col xs={12}>\n                    <FastField\n                        component={SelectField}\n                        name={content.fieldsUser.name}\n                        className={`${classProject.form}--field`}\n                        label={content.fieldsUser.label}\n                        options={project.members}\n                    />\n                </Col>\n            </Row>\n\n            <ButtonField\n                content={content.btnSubmit}\n                type=\"submit\"\n                className={`${classProject.form}--btn`}\n            />\n        </Form>\n    )\n}\n\nexport default FormTask\n","import moment from 'moment'\n\nimport { DatePicker, Row } from 'antd'\n\nimport './DateTask.scss'\nimport { useEffect, useState } from 'react'\nimport { Task } from '../../../../../types/global'\n\ntype DateTaskProps = {\n    className?: string\n    name?: string\n    label?: string\n\n    task: Task\n    changeExpires: Function\n}\n\nfunction DateTask(props: DateTaskProps) {\n    const [valueInput, setValueInput] = useState<any>(moment(props.task.expires))\n\n    useEffect(() => {\n        setValueInput(props.task.expires)\n    }, [props.task])\n\n    return (\n        <Row align=\"middle\" className={`${props.className}`}>\n            {props.label && <label className={`${props.className}--label`}>{props.label}</label>}\n            <DatePicker\n                allowClear={false}\n                className={`${props.className}--input`}\n                defaultValue={moment(props.task.expires)}\n                value={moment(valueInput)}\n                format={`DD/MM/YYYY`}\n                onChange={(val) => setValueInput(val)}\n                onBlur={() => props.changeExpires(valueInput, 'expires')}\n            />\n        </Row>\n    )\n}\n\nexport default DateTask\n","import { Col, Input, Row } from 'antd'\nimport { useEffect, useState } from 'react'\nimport { classProject } from '../../../../../constants/className'\nimport { CONTENT_PROJECT } from '../../../../../constants/global'\nimport { Task } from '../../../../../types/global'\n\ntype IProps = {\n    className: string\n    icon: string\n    task: Task\n    changeName: Function\n    handleTask: Function\n}\nconst content = CONTENT_PROJECT.tasks\n\nfunction HeaderTask(props: IProps) {\n    const [valueInput, setValueInput] = useState<string>(props.task.name)\n\n    useEffect(() => {\n        setValueInput(props.task.name)\n    }, [props.task])\n\n    return (\n        <Row justify=\"center\" align=\"middle\" className={`${props.className}`}>\n            <span className={`${props.className}--icon`}>\n                <props.icon />\n            </span>\n            <Input\n                name={props.task.name}\n                className={`${props.className}--input`}\n                defaultValue={props.task.name}\n                value={valueInput}\n                onChange={(e) => setValueInput(e.target.value)}\n                onBlur={() => props.changeName(valueInput, 'name')}\n                bordered={false}\n            />\n            <span\n                className={`${props.className}--icon-delete`}\n                onClick={() => props.handleTask(props.task._id, 'delete-task')}\n            >\n                <content.iconDeleteTask />\n            </span>\n        </Row>\n    )\n}\n\nexport default HeaderTask\n","import { Row, Select, Tag } from 'antd'\nimport { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport projectsApi from '../../../../../api/projectsApi'\nimport { randomColorAvatar } from '../../../../../functions/global'\nimport { Task } from '../../../../../types/global'\n\ntype SelectTaskProps = {\n    className?: string\n    name?: string\n    label?: string\n\n    task: Task\n    changeAssignee: Function\n}\n\nconst { Option } = Select\n\nfunction SelectTask(props: SelectTaskProps) {\n    const params: any = useParams()\n\n    const [options, setOptions] = useState<any>([])\n    const [defaultValues, setDefaultValues] = useState<any>(props.task.assignee)\n\n    const getMembers = async (id: string) => {\n        try {\n            const response = await projectsApi.getMembers(id)\n            setOptions(response)\n        } catch (error: any) {\n            console.log(error)\n        }\n    }\n\n    useEffect(() => {\n        getMembers(params.id)\n        setDefaultValues(props.task.assignee)\n    }, [props.task])\n\n    function tagRender(propsTag: any) {\n        const { label, value, closable, onClose } = propsTag\n\n        return (\n            <Tag\n                color={randomColorAvatar(value)}\n                closable={closable}\n                onClose={() => {\n                    onClose()\n                    props.changeAssignee(value, 'assignee', 'delete')\n                }}\n                style={{ marginRight: 3 }}\n            >\n                {label}\n            </Tag>\n        )\n    }\n\n    return (\n        <Row align=\"middle\" className={`${props.className}`}>\n            {props.label && <label className={`${props.className}--label`}>{props.label}</label>}\n            <Select\n                mode={'tags'}\n                bordered={false}\n                className={`${props.className}--input`}\n                value={defaultValues}\n                onChange={(value) => {\n                    setDefaultValues(value)\n                    props.changeAssignee(value[value.length - 1], 'assignee', 'add')\n                }}\n                tagRender={tagRender}\n            >\n                {options.map((value: any) => {\n                    return (\n                        <Option key={value._id} value={value._id}>\n                            {value.user.name}\n                        </Option>\n                    )\n                })}\n            </Select>\n        </Row>\n    )\n}\n\nexport default SelectTask\n","import { Row, Select } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { CONTENT_PROJECT } from '../../../../../constants/global';\nimport { Task } from '../../../../../types/global';\n\ntype StatusTaskProps = {\n    className?: string;\n    name?: string;\n    label?: string;\n\n    task: Task;\n    changeStatus: Function;\n};\n\nconst { Option } = Select;\nconst options: any = CONTENT_PROJECT.tasks.filter;\n\nfunction StatusTask(props: StatusTaskProps) {\n    const [defaultValues, setDefaultValues] = useState<any>(props.task.status);\n\n    useEffect(() => {\n        setDefaultValues(props.task.status);\n    }, [props.task]);\n\n    return (\n        <Row align=\"middle\" className={`${props.className}`}>\n            {props.label && <label className={`${props.className}--label`}>{props.label}</label>}\n            <Select\n                bordered={false}\n                className={`${props.className}--input`}\n                value={defaultValues}\n                onChange={(value) => {\n                    setDefaultValues(value);\n                    props.changeStatus(value, 'status');\n                }}\n            >\n                {options.map((value: any) => {\n                    return (\n                        <Option key={value.value} value={value.value}>\n                            {value.title}\n                        </Option>\n                    );\n                })}\n            </Select>\n        </Row>\n    );\n}\n\nexport default StatusTask;\n","import { FastField, Form } from 'formik'\nimport { classProject } from '../../../../constants/className'\nimport { CONTENT_PROJECT } from '../../../../constants/global'\nimport ButtonField from '../../../../custom-fields/BtnSubmit'\nimport InputField from '../../../../custom-fields/InputField'\n\nimport { HandleForm } from '../../../../types/auth'\n\nconst content = CONTENT_PROJECT.formSubTask\n\nfunction FormSubTask(props: HandleForm) {\n    return (\n        <Form onSubmit={props.handleSubmit}>\n            <FastField\n                component={InputField}\n                name={content.fieldsName.name}\n                type={content.fieldsName.type}\n                className={`${classProject.form}--field`}\n                label={content.fieldsName.label}\n            />\n\n            <ButtonField\n                content={content.btnSubmit}\n                type=\"submit\"\n                className={`${classProject.form}--btn`}\n            />\n        </Form>\n    )\n}\n\nexport default FormSubTask\n","import { Col, Row } from 'antd'\nimport { Formik } from 'formik'\nimport { useEffect, useState } from 'react'\nimport ModalCustom from '../../../../../components/ModalCustom'\nimport { CONTENT_PROJECT } from '../../../../../constants/global'\nimport { initialValuesFormProjectAddSubTask } from '../../../../../constants/initialValues'\nimport { validateFormProjectAddTask } from '../../../../../constants/validate'\n\nimport { Task } from '../../../../../types/global'\nimport FormSubTask from '../../FormSubTask'\n\ntype SubTaskProps = {\n    className?: string\n    icon: any\n    task: Task\n    handleSubmit: Function\n    handleChangeSubtask: Function\n}\n\nconst content = CONTENT_PROJECT.tasks.subtask\n\nfunction SubTask(props: SubTaskProps) {\n    const [contentModal, setContentModal] = useState<any>(<></>)\n    const [visible, setVisible] = useState<boolean>(false)\n\n    useEffect(() => {\n        const temp = (\n            <Formik\n                initialValues={initialValuesFormProjectAddSubTask}\n                validationSchema={validateFormProjectAddTask}\n                onSubmit={(valueForm) => {\n                    setVisible(false)\n                    props.handleSubmit(valueForm)\n                }}\n                render={FormSubTask}\n            />\n        )\n        setContentModal({ title: content.title, temp: temp })\n    }, [props.task, visible])\n\n    return (\n        <Row align=\"middle\" className={`${props.className}`}>\n            <Col xs={24}>\n                <Row>\n                    <button className={`${props.className}--btn`} onClick={() => setVisible(true)}>\n                        {content.btnAdd}\n                    </button>\n                </Row>\n                <span className={`${props.className}--title`}>{content.title}</span>\n                <Row>\n                    <Col xs={24} className={`${props.className}--list`}>\n                        {props.task.subtask_order?.map((value: any, index) => {\n                            return (\n                                <Row\n                                    key={`subtask-${index}`}\n                                    align=\"middle\"\n                                    justify=\"space-between\"\n                                    className={`${props.className}--item`}\n                                >\n                                    <div>\n                                        <props.icon /> <span>{value.name}</span>\n                                    </div>\n                                    {!value.complete && (\n                                        <div className={`${props.className}--icon`}>\n                                            <content.iconCheck\n                                                onClick={() =>\n                                                    props.handleChangeSubtask(value, 'complete')\n                                                }\n                                            />\n                                            <content.iconCancel\n                                                onClick={() =>\n                                                    props.handleChangeSubtask(value, 'delete')\n                                                }\n                                            />\n                                        </div>\n                                    )}\n                                </Row>\n                            )\n                        })}\n                    </Col>\n                </Row>\n            </Col>\n\n            <ModalCustom\n                loading={false}\n                contentModal={contentModal.temp}\n                visible={visible}\n                closeModal={(value: boolean) => {\n                    setVisible(value)\n                }}\n                title={contentModal.title}\n            />\n        </Row>\n    )\n}\n\nexport default SubTask\n","import { Input, Row } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { Task } from '../../../../../types/global';\n\ntype IProps = {\n    className?: string;\n    placeholder?: string;\n    name?: string;\n    value?: any;\n    label?: string;\n\n    task: Task;\n    changeDescription: Function;\n};\nconst { TextArea } = Input;\n\nfunction TextAreaTask(props: IProps) {\n    const [valueInput, setValueInput] = useState<string>(props.task.name);\n\n    useEffect(() => {\n        setValueInput(props.task.description || '');\n    }, [props.task]);\n\n    return (\n        <Row justify=\"center\" className={`${props.className}`}>\n            {props.label && (\n                <label htmlFor={props.name} className={`${props.className}--label`}>\n                    {props.label}\n                </label>\n            )}\n            <TextArea\n                rows={4}\n                name={props.task.name}\n                className={`${props.className}--area`}\n                defaultValue={props.task.description}\n                value={valueInput}\n                onChange={(e) => setValueInput(e.target.value)}\n                onBlur={() => props.changeDescription(valueInput, 'description')}\n                bordered={false}\n            />\n        </Row>\n    );\n}\n\nexport default TextAreaTask;\n","import { Col, Row } from 'antd';\nimport moment from 'moment';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport projectsApi from '../../../../api/projectsApi';\nimport { classProject } from '../../../../constants/className';\nimport { initialValuesFormProjectAddSubTask } from '../../../../constants/initialValues';\nimport { openNotificationWithIcon } from '../../../../functions/global';\nimport { Task } from '../../../../types/global';\nimport DateTask from './DateTask';\nimport HeaderTask from './Header';\nimport SelectTask from './SelectTask';\nimport StatusTask from './StatusTask';\nimport SubTask from './SubTask';\nimport TextAreaTask from './TextAreaTask';\n\ntype IProps = {\n    task: Task;\n    icon: string;\n\n    changeTask: Function;\n    memberProject: Array<any>;\n    setVisibleDrawer: Function;\n    setLoading: Function;\n};\n\nconst className = classProject.task;\n\nfunction TaskDetail(props: IProps) {\n    const params: any = useParams();\n    const [task, setTask] = useState<Task>(props.task);\n\n    const getTask = async (pid: string, id: string) => {\n        try {\n            const response: Task = await projectsApi.getTasksDetail(pid, id);\n            setTask(response);\n        } catch (error: any) {\n            console.log(error);\n        }\n    };\n\n    const patchTask = async (pid: string, id: string, data: Task) => {\n        try {\n            const response: Task = await projectsApi.patchTasks(pid, id, data);\n            if (response) {\n                props.changeTask();\n                getTask(pid, id);\n            }\n        } catch (error: any) {\n            console.log(error);\n        }\n    };\n\n    const deleteTask = async (pid: string, id: string) => {\n        try {\n            props.setLoading(true);\n\n            const response = await projectsApi.deleteTasks(pid, id);\n            props.changeTask();\n            if (response) {\n                props.setVisibleDrawer(false);\n                props.setLoading(false);\n            }\n        } catch (error: any) {\n            console.log(error);\n        }\n    };\n\n    const patchSubTask = async (pid: string, id: string, status: string) => {\n        try {\n            if (status === 'complete') {\n                const response: Task = await projectsApi.patchTasksComplete(pid, id);\n                openNotificationWithIcon('success', 'Task complete!', '');\n            } else {\n                const response = await projectsApi.deleteTasks(pid, id);\n                openNotificationWithIcon('success', 'Delete Task successfully!', '');\n            }\n            props.changeTask();\n            getTask(pid, task._id || '');\n        } catch (error: any) {\n            console.log(error);\n        }\n    };\n\n    const postSubTask = async (pid: string, id: string, data: Task) => {\n        try {\n            const response: Task = await projectsApi.postSubtasks(pid, id, data);\n\n            if (response) {\n                props.changeTask();\n                getTask(pid, id);\n                openNotificationWithIcon('success', 'Create Subtask successfully!', '');\n            }\n        } catch (error: any) {\n            console.log(error);\n        }\n    };\n\n    const postAssignee = async (pid: string, id: string, data: { member: string }) => {\n        try {\n            const response: Task = await projectsApi.postAssigneeTasks(pid, id, data);\n            if (response) {\n                props.changeTask();\n                getTask(pid, id);\n            }\n        } catch (error: any) {\n            console.log(error);\n        }\n    };\n\n    const deleteAssignee = async (pid: string, id: string, uid: string) => {\n        try {\n            const response: Task = await projectsApi.deleteAssigneeTasks(pid, id, uid);\n            setTask(response);\n        } catch (error: any) {\n            console.log(error);\n        }\n    };\n    const change = (value: any, field: any, status?: 'add' | 'delete') => {\n        const id = props.task._id || '';\n\n        if (value) {\n            let data: any = {};\n            switch (field) {\n                case 'name':\n                    data.name = value;\n                    patchTask(params.id, id, data);\n\n                    break;\n                case 'status':\n                    data.status = value;\n                    patchTask(params.id, id, data);\n\n                    break;\n                case 'description':\n                    data.description = value;\n                    patchTask(params.id, id, data);\n\n                    break;\n                case 'assignee':\n                    if (status === 'delete') {\n                        deleteAssignee(params.id, id, value);\n                    } else {\n                        postAssignee(params.id, id, { member: value });\n                    }\n\n                    break;\n                case 'expires':\n                    data.expires = Number(moment(value).utc().format('x'));\n                    patchTask(params.id, id, data);\n                    break;\n                case 'delete-task':\n                    deleteTask(params.id, value);\n                    break;\n                default:\n                    break;\n            }\n        }\n    };\n\n    const handleSubTask = (value: Task) => {\n        const id = props.task._id || '';\n        postSubTask(params.id, id, value);\n    };\n\n    const handleChangeSubtask = (value: any, status: string) => {\n        patchSubTask(params.id, value._id, status);\n    };\n\n    useEffect(() => {\n        setTask(props.task);\n    }, [props.task]);\n\n    return (\n        <Row>\n            <Col xs={24}>\n                <HeaderTask\n                    className={`${className}-header`}\n                    icon={props.icon}\n                    task={task}\n                    changeName={change}\n                    handleTask={change}\n                />\n                <SelectTask\n                    className={`${className}-field`}\n                    task={task}\n                    label={'Assignee'}\n                    changeAssignee={change}\n                />\n                <DateTask\n                    className={`${className}-field`}\n                    task={task}\n                    label={'Due date'}\n                    name={'expires'}\n                    changeExpires={change}\n                />\n                <StatusTask\n                    className={`${className}-field`}\n                    task={task}\n                    label={'Status'}\n                    changeStatus={change}\n                />\n                <TextAreaTask\n                    className={`${className}-field`}\n                    task={task}\n                    label={'Description'}\n                    name={'description'}\n                    changeDescription={change}\n                />\n\n                <SubTask\n                    className={`${className}-subtask`}\n                    task={task}\n                    icon={props.icon}\n                    handleSubmit={handleSubTask}\n                    handleChangeSubtask={handleChangeSubtask}\n                />\n            </Col>\n        </Row>\n    );\n}\n\nexport default TaskDetail;\n","import { Col, Row } from 'antd'\nimport moment from 'moment'\nimport { CONTENT_PROJECT } from '../../../../constants/global'\nimport { Task } from '../../../../types/global'\n\ntype IProps = {\n    className: string\n    title: string\n    actionDropdown: Function\n    filter?: string\n    icon: any\n\n    tasks: Array<Task>\n    handleTask: Function\n}\n\nconst content = CONTENT_PROJECT.tasks\n\nfunction Tasks(props: IProps) {\n    return (\n        <div className={`${props.className}`}>\n            <Row justify=\"center\">\n                <Col xs={24}>\n                    <Row className={`${props.className}--title`}>\n                        <span>{props.title}</span>\n                    </Row>\n                    <Row className={`${props.className}--tasks`}>\n                        <Col xs={24}>\n                            {props.tasks.length > 0 &&\n                                props.tasks.map((value, index) => {\n                                    if (value.status === props.filter)\n                                        return (\n                                            <Row\n                                                key={`task-${index}`}\n                                                className={`${props.className}--task`}\n                                                onClick={() => props.handleTask(value, props.icon)}\n                                            >\n                                                <Col xs={24}>\n                                                    <Row justify=\"space-between\" align=\"middle\">\n                                                        <Col\n                                                            xs={20}\n                                                            className={`${props.className}--task-name`}\n                                                        >\n                                                            <props.icon /> <span>{value.name}</span>\n                                                        </Col>\n                                                        <span\n                                                            className={`${props.className}--task-icon`}\n                                                        >\n                                                            <content.iconMenuTask />\n                                                        </span>\n                                                    </Row>\n                                                    <Row justify=\"space-between\">\n                                                        <span\n                                                            className={`${props.className}--task-time`}\n                                                        >\n                                                            <content.iconDeadline />{' '}\n                                                            {moment(value.expires).format(\n                                                                'DD/MM/YYYY'\n                                                            )}\n                                                        </span>\n                                                    </Row>\n                                                </Col>\n                                            </Row>\n                                        )\n                                })}\n\n                            <Row className={`${props.className}--btn`}>\n                                <Col xs={24}>\n                                    <Row\n                                        align=\"middle\"\n                                        onClick={() => props.actionDropdown('add-task')}\n                                    >\n                                        <span className={`${props.className}--btn-icon`}>\n                                            <content.iconBtnAdd />\n                                        </span>\n                                        <span className={`${props.className}--btn-text`}>\n                                            {content.textBtnAdd}\n                                        </span>\n                                    </Row>\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default Tasks\n","import { Col, Row } from 'antd';\nimport { Formik } from 'formik';\nimport moment from 'moment';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport projectsApi from '../../api/projectsApi';\nimport { add } from '../../app/projectSlice';\nimport { patchOneProject } from '../../app/projectsSlice';\nimport DrawerCustom from '../../components/DrawerCustom';\nimport Header from '../../components/Header';\nimport ModalCustom from '../../components/ModalCustom';\nimport { classLayout, classProject } from '../../constants/className';\nimport { CONTENT_PROJECT } from '../../constants/global';\nimport { initialValuesFormProjectAddTask } from '../../constants/initialValues';\nimport { validateFormProjectAddTask } from '../../constants/validate';\nimport { openNotificationWithIcon } from '../../functions/global';\nimport { Project, Task } from '../../types/global';\nimport FormMember from './components/FormMember';\nimport FormRoles from './components/FormRoles';\nimport FormSetRole from './components/FormSetRole';\nimport FormTask from './components/FormTask';\nimport TaskDetail from './components/TaskDetail';\nimport Tasks from './components/Tasks';\n\nimport './Project.scss';\n\ntype IProps = {\n    className: string;\n};\n\nconst content = CONTENT_PROJECT;\nconst className = classProject.project;\n\nfunction ProjectPage(props: IProps) {\n    const params: any = useParams();\n    const dispatch = useDispatch();\n\n    const [visible, setVisible] = useState<boolean>(false);\n    const [loading, setLoading] = useState<boolean>(false);\n    const [visibleDrawer, setVisibleDrawer] = useState<boolean>(false);\n    const [contentModal, setContentModal] = useState<any>(<></>);\n    const [contentDrawer, setContentDrawer] = useState<any>(<></>);\n\n    const projects: Array<Project> = useSelector((state: any) => state.projects);\n    const project: Project = useSelector((state: any) => state.project);\n\n    const [tasks, setTasks] = useState<Array<Task>>([]);\n\n    const getProject = async (pid: string) => {\n        try {\n            const response = await projectsApi.getProjectsDetail(pid);\n            dispatch(add(response));\n            getTasks(pid);\n        } catch (error: any) {\n            console.log(error);\n        }\n    };\n\n    const patchProject = async (pid: string, value: string) => {\n        try {\n            const response = await projectsApi.patchProjects(pid, { name: value });\n            dispatch(add(response));\n            dispatch(patchOneProject({ _pid: pid, value: value }));\n        } catch (error: any) {\n            console.log(error);\n        }\n    };\n\n    const getTasks = async (pid: string) => {\n        try {\n            const response: Array<Task> = await projectsApi.getTasks(pid);\n            setTasks(response);\n        } catch (error: any) {\n            console.log(error);\n        }\n    };\n\n    const postTask = async (pid: string, data: Task) => {\n        try {\n            setLoading(true);\n            const formData = {\n                name: data.name,\n            };\n            const response_post: Task = await projectsApi.postTasks(pid, formData);\n            const idTask = response_post._id || '';\n\n            if (data.assignee && response_post) {\n                for (const value of data.assignee) {\n                    const response_assignee: Task = await projectsApi.postAssigneeTasks(\n                        pid,\n                        idTask,\n                        { member: value }\n                    );\n                }\n\n                delete data.assignee;\n            }\n\n            if (data && response_post) {\n                data.expires = Number(moment(data.expires).utc().format('x'));\n\n                const response_patch: Task = await projectsApi.patchTasks(pid, idTask, data);\n\n                if (response_patch) {\n                    setVisible(false);\n                    setLoading(false);\n                    getProject(pid);\n                    openNotificationWithIcon('success', 'Create Task successfully!', '');\n                }\n            }\n        } catch (error: any) {\n            console.log(error);\n        }\n    };\n\n    const handleSubmit = (value: any, action: string, filter?: string) => {\n        switch (action) {\n            case 'add-task':\n                postTask(project._id, { ...value, status: filter });\n                break;\n\n            default:\n                break;\n        }\n    };\n\n    const handleActionDropdown = (value: any, filter?: string) => {\n        let temp = <></>;\n        let title = '';\n\n        setVisible(true);\n\n        switch (value) {\n            case 'add-task':\n                temp = (\n                    <Formik\n                        initialValues={initialValuesFormProjectAddTask}\n                        validationSchema={validateFormProjectAddTask}\n                        onSubmit={(valueForm) => handleSubmit(valueForm, value, filter)}\n                        render={FormTask}\n                    />\n                );\n                title = 'Add Task';\n                break;\n            case 'add-member':\n                temp = <FormMember />;\n                title = 'Members';\n\n                break;\n            case 'add-roles':\n                temp = <FormRoles />;\n                title = 'Roles';\n\n                break;\n            case 'set-role':\n                temp = <FormSetRole />;\n                title = 'Set Role for Members';\n\n                break;\n            default:\n                break;\n        }\n\n        setContentModal({ temp: temp, title: title });\n    };\n\n    const handleTask = (value: Task, icon: string) => {\n        setVisibleDrawer(true);\n        setContentDrawer(\n            <TaskDetail\n                task={value}\n                icon={icon}\n                changeTask={() => {\n                    getTasks(params.id);\n                }}\n                memberProject={project.members}\n                setVisibleDrawer={(value: boolean) => setVisibleDrawer(value)}\n                setLoading={(value: boolean) => setLoading(value)}\n            />\n        );\n    };\n\n    useEffect(() => {\n        if (projects && projects.length > 0) {\n            projects.forEach((value) => {\n                if (value._id === params.id) {\n                    getTasks(value._id);\n                    dispatch(add(value));\n                }\n            });\n        } else {\n            getProject(params.id);\n        }\n    }, [params]);\n\n    useEffect(() => {\n        if (!visible) setContentModal({ temp: <></>, title: '' });\n    }, [visible]);\n\n    return (\n        <Row className={`${props.className} ${className}`}>\n            <Col xs={24}>\n                <Header\n                    className={classLayout.header}\n                    dropdown={project.name}\n                    actionDropdown={handleActionDropdown}\n                    changeNameProject={(value: any) => patchProject(project._id, value)}\n                />\n                <div className={`${className}__list`}>\n                    <div className={`${className}__list--scroll`}>\n                        {content.tasks.filter.map((value, index) => {\n                            return (\n                                <Tasks\n                                    key={`tasks-${index}`}\n                                    actionDropdown={(valueTask: any) =>\n                                        handleActionDropdown(valueTask, value.value)\n                                    }\n                                    className={`${className}__list-tasks`}\n                                    title={value.title}\n                                    tasks={tasks}\n                                    filter={value.value}\n                                    icon={value.icon}\n                                    handleTask={handleTask}\n                                />\n                            );\n                        })}\n                    </div>\n                </div>\n                <ModalCustom\n                    loading={loading}\n                    contentModal={contentModal.temp}\n                    visible={visible}\n                    closeModal={(value: boolean) => {\n                        setVisible(value);\n                    }}\n                    title={contentModal.title}\n                />\n\n                <DrawerCustom\n                    loading={loading}\n                    visible={visibleDrawer}\n                    closeModal={() => setVisibleDrawer(false)}\n                    contentDrawer={contentDrawer}\n                />\n            </Col>\n        </Row>\n    );\n}\n\nexport default ProjectPage;\n"],"names":["props","name","user","align","className","overlay","menuUser","placement","arrow","style","backgroundColor","randomColorAvatar","_id","slice","indexOf","content","CONTENT_COMPONENT","classComponent","useSelector","state","dispatch","useDispatch","useState","dropdown","title","setTitle","menuDropdown","onClick","value","actionDropdown","key","map","icon","text","handleUser","getUser","userApi","response","setUser","console","log","setSignOut","isLogin","useEffect","undefined","justify","DownOutlined","bordered","onChange","e","target","onBlur","changeNameProject","navigate","length","index","to","path","isActive","Search","onSearch","User","visible","width","onClose","closeModal","getContainer","closable","spinning","loading","contentDrawer","CONTENT_PROJECT","type","handleMember","projectAuthor","xs","shape","size","borderRadius","email","btnSubmit","btnDelete","classProject","project","userSearch","setUserSearch","findUser","mail","openNotificationWithIcon","arr","filter","members","item","push","postMember","pid","data","projectsApi","addMember","addMemberToProject","_pid","deleteMemberAPI","uid","deleteMember","deleteMemberToProject","Member","author","label","htmlFor","placeholder","roles","default","permission","color","marginRight","marginBottom","fontSize","handleDelete","Option","Select","mode","val","tagRender","options","params","useParams","dataAddRole","setDataAddRole","setRoles","getRoles","id","postRoles","deleteRoles","optionsPermission","iconDeleteRole","defaultValue","patchRole","role","valueSelect","setRoleForMember","field","form","setFieldValue","valueFormat","moment","touched","hasError","errors","submittedError","touchedError","help","validateStatus","allowClear","format","disabled","selectedOption","changeEvent","onSubmit","handleSubmit","component","InputField","fieldsName","DateField","fieldsExpires","SelectField","fieldsUser","task","expires","valueInput","setValueInput","changeExpires","changeName","handleTask","iconDeleteTask","setOptions","assignee","defaultValues","setDefaultValues","getMembers","changeAssignee","propsTag","status","changeStatus","contentModal","setContentModal","setVisible","temp","initialValues","initialValuesFormProjectAddSubTask","validationSchema","validateFormProjectAddTask","valueForm","render","FormSubTask","btnAdd","subtask_order","complete","iconCheck","handleChangeSubtask","iconCancel","ModalCustom","TextArea","Input","description","rows","changeDescription","setTask","getTask","patchTask","changeTask","deleteTask","setLoading","setVisibleDrawer","patchSubTask","postSubTask","postAssignee","deleteAssignee","change","member","Number","utc","tasks","iconMenuTask","iconDeadline","iconBtnAdd","textBtnAdd","visibleDrawer","setContentDrawer","projects","setTasks","getProject","add","getTasks","patchProject","patchOneProject","postTask","formData","response_post","idTask","handleActionDropdown","initialValuesFormProjectAddTask","action","FormTask","memberProject","forEach","Header","classLayout","valueTask"],"sourceRoot":""}