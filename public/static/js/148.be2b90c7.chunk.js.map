{"version":3,"file":"static/js/148.be2b90c7.chunk.js","mappings":"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","sources":["components/Header/components/User/index.tsx","components/Header/index.tsx","features/Home/components/Description/index.tsx","features/Home/components/FormProject/index.tsx","features/Home/components/Priorities/Task/index.tsx","features/Home/components/Priorities/index.tsx","features/Home/components/Projects/ProjectDetail/index.tsx","features/Home/components/Projects/index.tsx","features/Home/index.tsx","../node_modules/antd/es/dropdown/index.js"],"sourcesContent":["import { Avatar, Col, Dropdown, Menu, Row } from 'antd'\nimport { User } from '../../../../types/global'\nimport { PlusOutlined } from '@ant-design/icons'\nimport { randomColorAvatar } from '../../../../functions/global'\n\ntype IProps = {\n    className: string\n    user: User\n\n    menuUser: any\n}\n\nfunction UserDetail(props: IProps) {\n    const name = props.user.name\n\n    return (\n        <Row align=\"middle\">\n            <Col className={`${props.className}--name`}>\n                <span>{props.user.name}</span>\n            </Col>\n            <Dropdown\n                overlay={props.menuUser}\n                placement=\"bottomRight\"\n                arrow\n                className={`${props.className}--avatar`}\n            >\n                <Avatar style={{ backgroundColor: randomColorAvatar(props.user._id) }}>\n                    {name?.slice(name?.indexOf(' ') + 1, name?.indexOf(' ') + 2)}\n                </Avatar>\n            </Dropdown>\n        </Row>\n    )\n}\n\nexport default UserDetail\n","import { Col, Dropdown, Input, Menu, Row } from 'antd'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport userApi from '../../api/userApi'\nimport { setSignOut, setUser } from '../../app/userSlice'\nimport { classComponent } from '../../constants/className'\nimport { User } from '../../types/global'\nimport Search from '../Search'\nimport UserDetail from './components/User'\nimport { DownOutlined } from '@ant-design/icons'\n\nimport './Header.scss'\nimport { NavLink } from 'react-router-dom'\nimport { CONTENT_COMPONENT } from '../../constants/global'\n\ntype TProps = {\n    className: string\n    title?: string\n    dropdown?: any\n    actionDropdown?: Function\n    navigate?: Array<any>\n\n    changeNameProject?: Function\n}\n\nconst content = CONTENT_COMPONENT.header\nconst className = classComponent.header\n\nfunction Header(props: TProps) {\n    const user: User = useSelector((state: any) => state.user)\n    const dispatch = useDispatch()\n    const [title, setTitle] = useState<string>(props.dropdown)\n\n    const menuDropdown = (\n        <Menu\n            onClick={(value) => {\n                if (props.actionDropdown) props.actionDropdown(value.key)\n            }}\n        >\n            {content.menuDropdown.map((value) => {\n                return (\n                    <Menu.Item key={value.key}>\n                        <value.icon /> {value.text}\n                    </Menu.Item>\n                )\n            })}\n        </Menu>\n    )\n\n    const menuUser = (\n        <Menu onClick={(value) => handleUser(value.key)}>\n            {content.menuUser.map((value) => {\n                return (\n                    <Menu.Item key={value.key}>\n                        <value.icon /> {value.text}\n                    </Menu.Item>\n                )\n            })}\n        </Menu>\n    )\n\n    const getUser = async (_id: string) => {\n        try {\n            const response: any = await userApi.getUserDetail(_id)\n            dispatch(setUser(response))\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const handleUser = (value: any) => {\n        switch (value) {\n            case 'profile':\n                break\n            case 'logout':\n                dispatch(setSignOut({ isLogin: false, _id: '' }))\n                break\n            default:\n                break\n        }\n    }\n\n    useEffect(() => {\n        getUser(user._id)\n        setTitle(props.dropdown)\n    }, [user.name !== undefined, props.dropdown])\n\n    return (\n        <Row align=\"middle\" justify=\"space-between\" className={`${className} ${props.className}`}>\n            <Col>\n                <Row>\n                    {props.dropdown ? (\n                        <span className={`${className}__title`}>\n                            <Dropdown overlay={menuDropdown} placement=\"bottomLeft\" arrow>\n                                <button className={`${className}__title--icon`}>\n                                    <DownOutlined />\n                                </button>\n                            </Dropdown>\n\n                            <Input\n                                className={`${className}__title--input`}\n                                bordered={false}\n                                value={title}\n                                onChange={(e) => setTitle(e.target.value)}\n                                onBlur={() => {\n                                    props.changeNameProject &&\n                                        props.changeNameProject(title || props.dropdown)\n                                }}\n                            />\n                        </span>\n                    ) : (\n                        <span className={`${className}__title`}>{props.title}</span>\n                    )}\n                </Row>\n                {props.navigate && props.navigate.length && (\n                    <Row className={`${className}__navigate`}>\n                        {props.navigate.map((value, index) => {\n                            return (\n                                <Col key={`header-navigate-${index} `}>\n                                    <NavLink\n                                        to={value.path}\n                                        className={({ isActive }) =>\n                                            isActive\n                                                ? `${className}__navigate--link active`\n                                                : `${className}__navigate--link`\n                                        }\n                                    >\n                                        {value.text}\n                                    </NavLink>\n                                </Col>\n                            )\n                        })}\n                    </Row>\n                )}\n            </Col>\n            <Col>\n                <Row align=\"middle\">\n                    <Col className={`${className}__search`}>\n                        <Search onSearch={(value: any) => console.log(value)} />\n                    </Col>\n                    <Col>\n                        <UserDetail\n                            menuUser={menuUser}\n                            user={user}\n                            className={`${className}__detail`}\n                        />\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    )\n}\n\nexport default Header\n","import { Col, Row } from 'antd'\nimport moment from 'moment'\nimport { useSelector } from 'react-redux'\nimport { CONTENT_HOME } from '../../../../constants/global'\nimport { Project, User } from '../../../../types/global'\n\ntype IProps = {\n    className: string\n}\n\nconst content = CONTENT_HOME.descriptionContent\n\nfunction Description(props: IProps) {\n    const user: User = useSelector((state: any) => state.user)\n    const projects: Array<Project> = useSelector((state: any) => state.projects) || []\n\n    const now = moment().format('dddd, MMMM Do')\n\n    return (\n        <>\n            <Row justify=\"center\" align=\"middle\">\n                <Col xs={12} className={`${props.className}`}>\n                    <span className={`${props.className}--text`}>{now}</span>\n                    <span\n                        className={`${props.className}--text`}\n                    >{`${content.textDesc} ${user.name}`}</span>\n                </Col>\n            </Row>\n            <Row justify=\"center\" align=\"middle\">\n                <Col xs={10} className={`${props.className}--box`}>\n                    <Row justify=\"center\" align=\"middle\">\n                        <Col xs={12} className={`${props.className}--desc`}>\n                            <content.iconTask /> {`0 ${content.textTask}`}\n                        </Col>\n                        <Col xs={12} className={`${props.className}--desc`}>\n                            <content.iconProject /> {`${projects.length} ${content.textProjects}`}\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default Description\n","import { FastField, Form } from 'formik'\nimport { classHome } from '../../../../constants/className'\nimport { CONTENT_HOME } from '../../../../constants/global'\nimport ButtonField from '../../../../custom-fields/BtnSubmit'\nimport InputField from '../../../../custom-fields/InputField'\n\nimport { HandleForm } from '../../../../types/auth'\n\nconst content = CONTENT_HOME.formProject\n\nfunction FormProject(props: HandleForm) {\n    return (\n        <Form onSubmit={props.handleSubmit}>\n            <FastField\n                component={InputField}\n                name={content.fieldsName.name}\n                type={content.fieldsName.type}\n                className={`${classHome.form}--field`}\n                label={content.fieldsName.label}\n            />\n\n            <ButtonField\n                content={content.btnSubmit}\n                type=\"submit\"\n                className={`${classHome.form}--btn`}\n            />\n        </Form>\n    )\n}\n\nexport default FormProject\n","import { Row } from 'antd'\nimport { CONTENT_HOME } from '../../../../../constants/global'\n\ntype IProps = {\n    className: string\n    value: any\n}\n\nconst content = CONTENT_HOME.priorities.iconStatus\n\nfunction Task(props: IProps) {\n    return (\n        <Row align=\"middle\" className={props.className}>\n            {content.map((value, index) => {\n                if (value.value === props.value.status)\n                    return (\n                        <span key={`task-icon-${index}`} className={`${props.className}-icon`}>\n                            <value.icon key={`icon-${index}`} />\n                        </span>\n                    )\n            })}\n            <span className={`${props.className}-text`}>{`${props.value.name}`}</span>\n        </Row>\n    )\n}\n\nexport default Task\n","import { Col, Row } from 'antd'\nimport { useState } from 'react'\nimport { CONTENT_HOME } from '../../../../constants/global'\nimport Task from './Task'\n\ntype IProps = {\n    className: string\n    listTask: Array<any>\n}\n\nconst content = CONTENT_HOME.priorities\n\nfunction Priorities(props: IProps) {\n    const [filter, setFilter] = useState<string>('doing')\n\n    return (\n        <Row className={`${props.className}`}>\n            <Col xs={24}>\n                <Row align=\"middle\" className={`${props.className}--title`}>\n                    <span>{content.title}</span>\n                </Row>\n                <Row align=\"middle\" className={`${props.className}--navigate`}>\n                    {content.navigate &&\n                        content.navigate.length &&\n                        content.navigate.map((value, index) => {\n                            return (\n                                <Col\n                                    key={`priorities-nav-${index}`}\n                                    className={\n                                        filter === value.value\n                                            ? `${props.className}--navigate-item active`\n                                            : `${props.className}--navigate-item`\n                                    }\n                                    onClick={() => setFilter(value.value)}\n                                >\n                                    {value.text}\n                                </Col>\n                            )\n                        })}\n                </Row>\n                <Row className={`${props.className}--tasks`}>\n                    <Col xs={24}>\n                        <Row align=\"middle\" className={`${props.className}--task`}>\n                            <span className={`${props.className}--task-icon`}>\n                                <content.iconAddTask />\n                            </span>\n                            <span className={`${props.className}--task-text`}>\n                                {content.textAddTask}\n                            </span>\n                        </Row>\n                        {props.listTask.map((value, index) => {\n                            return (\n                                <Task\n                                    key={`task-${index}`}\n                                    className={`${props.className}--task`}\n                                    value={value}\n                                />\n                            )\n                        })}\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    )\n}\n\nexport default Priorities\n","import { Avatar, Col, Row } from 'antd'\nimport { CONTENT_HOME } from '../../../../../constants/global'\nimport { Project } from '../../../../../types/global'\nimport { NavLink } from 'react-router-dom'\nimport { randomColorAvatar } from '../../../../../functions/global'\n\ntype IProps = {\n    className: string\n    value: Project\n}\n\nconst content = CONTENT_HOME.projects.project\n\nfunction ProjectDetail(props: IProps) {\n    return (\n        <Col xs={12}>\n            <NavLink to={`/project/${props.value._id}`}>\n                <Row align=\"middle\" className={`${props.className}`}>\n                    <Col xs={7} className={`${props.className}-avatar`}>\n                        <Avatar\n                            shape=\"square\"\n                            size={55}\n                            style={{\n                                backgroundColor: randomColorAvatar(props.value._id),\n                                borderRadius: 15,\n                            }}\n                        >\n                            {props.value.name?.slice(0, 1)}\n                        </Avatar>\n                    </Col>\n                    <Col xs={17}>\n                        <Row className={`${props.className}-name`}>\n                            <span>{props.value.name}</span>\n                        </Row>\n                        <Row className={`${props.className}-member`}>\n                            <Avatar.Group maxCount={3} size=\"small\">\n                                {props.value.members.map((value, index) => {\n                                    return (\n                                        <Avatar\n                                            key={`avatar-mem-project-${index}`}\n                                            style={{\n                                                backgroundColor: randomColorAvatar(value.user._id),\n                                            }}\n                                        >\n                                            {value.user.name?.slice(\n                                                value.user.name?.indexOf(' ') + 1,\n                                                value.user.name?.indexOf(' ') + 2\n                                            )}\n                                        </Avatar>\n                                    )\n                                })}\n                            </Avatar.Group>\n                        </Row>\n                    </Col>\n                </Row>\n            </NavLink>\n        </Col>\n    )\n}\n\nexport default ProjectDetail\n","import { Col, Row } from 'antd'\nimport { useSelector } from 'react-redux'\nimport { CONTENT_HOME } from '../../../../constants/global'\nimport { Project } from '../../../../types/global'\nimport ProjectDetail from './ProjectDetail'\n\ntype IProps = {\n    className: string\n    onClickAddProject: Function\n}\n\nconst content = CONTENT_HOME.projects\n\nfunction Projects(props: IProps) {\n    const projects: Array<Project> = useSelector((state: any) => state.projects) || []\n\n    return (\n        <Row className={`${props.className}`}>\n            <Col xs={24}>\n                <Row align=\"middle\" className={`${props.className}--title`}>\n                    <span>{content.title}</span>\n                </Row>\n                <Row\n                    align=\"middle\"\n                    className={`${props.className}--btn`}\n                    onClick={() => props.onClickAddProject()}\n                >\n                    <span className={`${props.className}--btn-icon`}>\n                        <content.iconAddProject />\n                    </span>\n                    <span className={`${props.className}--btn-text`}>{content.textAddProject}</span>\n                </Row>\n                <Row align=\"top\" className={`${props.className}--projects`}>\n                    {projects &&\n                        projects.length > 0 &&\n                        projects.map((value, index) => {\n                            return (\n                                <ProjectDetail\n                                    key={`project-${index}`}\n                                    className={`${props.className}--project`}\n                                    value={value}\n                                />\n                            )\n                        })}\n                </Row>\n            </Col>\n        </Row>\n    )\n}\n\nexport default Projects\n","import { Col, Row } from 'antd';\nimport { Formik } from 'formik';\nimport { useState, useEffect } from 'react';\nimport projectApi from '../../api/projectsApi';\n\nimport { useNavigate } from 'react-router-dom';\n\nimport Header from '../../components/Header';\nimport ModalCustom from '../../components/ModalCustom';\nimport { classHome, classLayout } from '../../constants/className';\nimport { CONTENT_HOME } from '../../constants/global';\nimport { initialValuesFormHomeProject } from '../../constants/initialValues';\nimport { validateFormHomeProject } from '../../constants/validate';\nimport { openNotificationWithIcon } from '../../functions/global';\nimport { DataProject } from '../../types/api';\nimport Description from './components/Description';\nimport FormProject from './components/FormProject';\nimport Priorities from './components/Priorities';\nimport Projects from './components/Projects';\n\nimport './Home.scss';\nimport { useDispatch } from 'react-redux';\nimport { add, list } from '../../app/projectsSlice';\n\ntype Home = {\n    className: string;\n};\n\nconst content = CONTENT_HOME;\nconst className = classHome.home;\n\nfunction Home(props: Home) {\n    const [visible, setVisible] = useState<boolean>(false);\n    const [loading, setLoading] = useState<boolean>(false);\n\n    const nav = useNavigate();\n    const dispatch = useDispatch();\n\n    const getProjects = async () => {\n        try {\n            const response = await projectApi.getProjects();\n            dispatch(list(response));\n        } catch (error: any) {\n            console.log(error);\n        }\n    };\n\n    const postProjects = async (formData: DataProject) => {\n        try {\n            setLoading(true);\n            const response: any = await projectApi.postProjects(formData);\n            if (response) {\n                setLoading(false);\n                setVisible(false);\n                openNotificationWithIcon('success', 'Create project successfully!', '');\n                getProjects();\n                nav(`/project/${response._id}`);\n            }\n\n            console.log(response);\n        } catch (error: any) {\n            console.log(error);\n        }\n    };\n\n    const handleSubmit = (value: DataProject) => postProjects(value);\n\n    const contentModal = (\n        <Formik\n            initialValues={initialValuesFormHomeProject}\n            validationSchema={validateFormHomeProject}\n            onSubmit={handleSubmit}\n            render={FormProject}\n        />\n    );\n\n    useEffect(() => {\n        getProjects();\n    }, []);\n\n    return (\n        <Row className={`${props.className} ${className}`}>\n            <Col xs={24}>\n                <Header className={classLayout.header} title={content.title} />\n                <Description className={`${className}__desc`} />\n                <Row justify=\"center\">\n                    <Col xs={12}>\n                        <Priorities\n                            className={`${className}__priorities`}\n                            listTask={[\n                                { name: 'test task 1', status: 'doing' },\n                                { name: 'test task 2', status: 'completed' },\n                                { name: 'test task 3', status: 'overdue' },\n                            ]}\n                        />\n                    </Col>\n                    <Col xs={12}>\n                        <Projects\n                            onClickAddProject={() => setVisible(!visible)}\n                            className={`${className}__project`}\n                        />\n                    </Col>\n                </Row>\n                <ModalCustom\n                    loading={loading}\n                    contentModal={contentModal}\n                    visible={visible}\n                    closeModal={(value: boolean) => setVisible(value)}\n                    title={content.formProject.title}\n                />\n            </Col>\n        </Row>\n    );\n}\n\nexport default Home;\n","import Dropdown from './dropdown';\nexport default Dropdown;"],"names":["props","name","user","align","className","overlay","menuUser","placement","arrow","style","backgroundColor","randomColorAvatar","_id","slice","indexOf","content","CONTENT_COMPONENT","classComponent","useSelector","state","dispatch","useDispatch","useState","dropdown","title","setTitle","menuDropdown","onClick","value","actionDropdown","key","map","icon","text","handleUser","getUser","userApi","response","setUser","console","log","setSignOut","isLogin","useEffect","undefined","justify","DownOutlined","bordered","onChange","e","target","onBlur","changeNameProject","navigate","length","index","to","path","isActive","Search","onSearch","User","CONTENT_HOME","projects","now","moment","format","xs","textDesc","iconTask","textTask","iconProject","textProjects","onSubmit","handleSubmit","component","InputField","fieldsName","type","classHome","label","btnSubmit","status","filter","setFilter","iconAddTask","textAddTask","listTask","shape","size","borderRadius","maxCount","members","onClickAddProject","iconAddProject","textAddProject","visible","setVisible","loading","setLoading","nav","useNavigate","getProjects","projectApi","list","postProjects","formData","openNotificationWithIcon","contentModal","initialValues","initialValuesFormHomeProject","validationSchema","validateFormHomeProject","render","FormProject","Header","classLayout","ModalCustom","closeModal","formProject","Dropdown"],"sourceRoot":""}